/*
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.ide.contentassist.antlr;

import com.google.common.collect.ImmutableMap;
import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.Map;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ide.editor.contentassist.antlr.AbstractContentAssistParser;
import org.xtext.example.mydsl.ide.contentassist.antlr.internal.InternalPascalParser;
import org.xtext.example.mydsl.services.PascalGrammarAccess;

public class PascalParser extends AbstractContentAssistParser {

	@Singleton
	public static final class NameMappings {
		
		private final Map<AbstractElement, String> mappings;
		
		@Inject
		public NameMappings(PascalGrammarAccess grammarAccess) {
			ImmutableMap.Builder<AbstractElement, String> builder = ImmutableMap.builder();
			init(builder, grammarAccess);
			this.mappings = builder.build();
		}
		
		public String getRuleName(AbstractElement element) {
			return mappings.get(element);
		}
		
		private static void init(ImmutableMap.Builder<AbstractElement, String> builder, PascalGrammarAccess grammarAccess) {
			builder.put(grammarAccess.getProgramHeadingAccess().getAlternatives(), "rule__ProgramHeading__Alternatives");
			builder.put(grammarAccess.getBlockAccess().getAlternatives_0(), "rule__Block__Alternatives_0");
			builder.put(grammarAccess.getConstantAccess().getAlternatives(), "rule__Constant__Alternatives");
			builder.put(grammarAccess.getUnsignedNumberAccess().getAlternatives(), "rule__UnsignedNumber__Alternatives");
			builder.put(grammarAccess.getSignAccess().getSignAlternatives_0(), "rule__Sign__SignAlternatives_0");
			builder.put(grammarAccess.getBoolAccess().getBoolAlternatives_0(), "rule__Bool__BoolAlternatives_0");
			builder.put(grammarAccess.getTypeDefinitionAccess().getTypeAlternatives_2_0(), "rule__TypeDefinition__TypeAlternatives_2_0");
			builder.put(grammarAccess.getTypeStartAccess().getTypeStartAlternatives_0(), "rule__TypeStart__TypeStartAlternatives_0");
			builder.put(grammarAccess.getSimpleTypeAccess().getSimpleTypeAlternatives_0(), "rule__SimpleType__SimpleTypeAlternatives_0");
			builder.put(grammarAccess.getTypeIdentifierAccess().getAlternatives(), "rule__TypeIdentifier__Alternatives");
			builder.put(grammarAccess.getTypeIdentifierAccess().getTypeAlternatives_1_0(), "rule__TypeIdentifier__TypeAlternatives_1_0");
			builder.put(grammarAccess.getStructuredTypeAccess().getAlternatives(), "rule__StructuredType__Alternatives");
			builder.put(grammarAccess.getStringtypeAccess().getAlternatives_2(), "rule__Stringtype__Alternatives_2");
			builder.put(grammarAccess.getFieldListAccess().getAlternatives(), "rule__FieldList__Alternatives");
			builder.put(grammarAccess.getTagAccess().getAlternatives(), "rule__Tag__Alternatives");
			builder.put(grammarAccess.getProcedureOrFunctionDeclarationAccess().getAlternatives(), "rule__ProcedureOrFunctionDeclaration__Alternatives");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getAlternatives(), "rule__FormalParameterSection__Alternatives");
			builder.put(grammarAccess.getStatementAccess().getAlternatives(), "rule__Statement__Alternatives");
			builder.put(grammarAccess.getUnlabelledStatementAccess().getAlternatives(), "rule__UnlabelledStatement__Alternatives");
			builder.put(grammarAccess.getSimpleStatementAccess().getAlternatives(), "rule__SimpleStatement__Alternatives");
			builder.put(grammarAccess.getVariableAccess().getAlternatives_0(), "rule__Variable__Alternatives_0");
			builder.put(grammarAccess.getVariableAccess().getAlternatives_1(), "rule__Variable__Alternatives_1");
			builder.put(grammarAccess.getAdditiveoperatorAccess().getAlternatives(), "rule__Additiveoperator__Alternatives");
			builder.put(grammarAccess.getMultiplicativeoperatorAccess().getAlternatives(), "rule__Multiplicativeoperator__Alternatives");
			builder.put(grammarAccess.getSignedFactorAccess().getAlternatives_0(), "rule__SignedFactor__Alternatives_0");
			builder.put(grammarAccess.getFactorAccess().getAlternatives(), "rule__Factor__Alternatives");
			builder.put(grammarAccess.getUnsignedConstantAccess().getAlternatives(), "rule__UnsignedConstant__Alternatives");
			builder.put(grammarAccess.getStructuredStatementAccess().getAlternatives(), "rule__StructuredStatement__Alternatives");
			builder.put(grammarAccess.getProgramStartAccess().getGroup(), "rule__ProgramStart__Group__0");
			builder.put(grammarAccess.getProgramHeadingAccess().getGroup_0(), "rule__ProgramHeading__Group_0__0");
			builder.put(grammarAccess.getProgramHeadingAccess().getGroup_0_2(), "rule__ProgramHeading__Group_0_2__0");
			builder.put(grammarAccess.getProgramHeadingAccess().getGroup_1(), "rule__ProgramHeading__Group_1__0");
			builder.put(grammarAccess.getBlockAccess().getGroup(), "rule__Block__Group__0");
			builder.put(grammarAccess.getUsesUnitsPartAccess().getGroup(), "rule__UsesUnitsPart__Group__0");
			builder.put(grammarAccess.getLabelDeclarationPartAccess().getGroup(), "rule__LabelDeclarationPart__Group__0");
			builder.put(grammarAccess.getLabelDeclarationPartAccess().getGroup_2(), "rule__LabelDeclarationPart__Group_2__0");
			builder.put(grammarAccess.getConstantDefinitionPartAccess().getGroup(), "rule__ConstantDefinitionPart__Group__0");
			builder.put(grammarAccess.getConstantDefinitionPartAccess().getGroup_1(), "rule__ConstantDefinitionPart__Group_1__0");
			builder.put(grammarAccess.getConstantDefinitionAccess().getGroup(), "rule__ConstantDefinition__Group__0");
			builder.put(grammarAccess.getConstantChrAccess().getGroup(), "rule__ConstantChr__Group__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_1(), "rule__Constant__Group_1__0");
			builder.put(grammarAccess.getConstantAccess().getGroup_3(), "rule__Constant__Group_3__0");
			builder.put(grammarAccess.getTypeDefinitionPartAccess().getGroup(), "rule__TypeDefinitionPart__Group__0");
			builder.put(grammarAccess.getTypeDefinitionPartAccess().getGroup_1(), "rule__TypeDefinitionPart__Group_1__0");
			builder.put(grammarAccess.getTypeDefinitionAccess().getGroup(), "rule__TypeDefinition__Group__0");
			builder.put(grammarAccess.getFunctionTypeAccess().getGroup(), "rule__FunctionType__Group__0");
			builder.put(grammarAccess.getProcedureTypeAccess().getGroup(), "rule__ProcedureType__Group__0");
			builder.put(grammarAccess.getScalarTypeAccess().getGroup(), "rule__ScalarType__Group__0");
			builder.put(grammarAccess.getSubrangeTypeAccess().getGroup(), "rule__SubrangeType__Group__0");
			builder.put(grammarAccess.getStructuredTypeAccess().getGroup_0(), "rule__StructuredType__Group_0__0");
			builder.put(grammarAccess.getStringtypeAccess().getGroup(), "rule__Stringtype__Group__0");
			builder.put(grammarAccess.getRecordTypeAccess().getGroup(), "rule__RecordType__Group__0");
			builder.put(grammarAccess.getRecordTypeAccess().getGroup_2(), "rule__RecordType__Group_2__0");
			builder.put(grammarAccess.getFieldListAccess().getGroup_0(), "rule__FieldList__Group_0__0");
			builder.put(grammarAccess.getFieldListAccess().getGroup_0_1(), "rule__FieldList__Group_0_1__0");
			builder.put(grammarAccess.getFixedPartAccess().getGroup(), "rule__FixedPart__Group__0");
			builder.put(grammarAccess.getFixedPartAccess().getGroup_1(), "rule__FixedPart__Group_1__0");
			builder.put(grammarAccess.getRecordSectionAccess().getGroup(), "rule__RecordSection__Group__0");
			builder.put(grammarAccess.getVariantPartAccess().getGroup(), "rule__VariantPart__Group__0");
			builder.put(grammarAccess.getVariantPartAccess().getGroup_4(), "rule__VariantPart__Group_4__0");
			builder.put(grammarAccess.getTagAccess().getGroup_0(), "rule__Tag__Group_0__0");
			builder.put(grammarAccess.getVariantAccess().getGroup(), "rule__Variant__Group__0");
			builder.put(grammarAccess.getPointerTypeAccess().getGroup(), "rule__PointerType__Group__0");
			builder.put(grammarAccess.getVariableDeclarationPartAccess().getGroup(), "rule__VariableDeclarationPart__Group__0");
			builder.put(grammarAccess.getVariableDeclarationPartAccess().getGroup_2(), "rule__VariableDeclarationPart__Group_2__0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getGroup(), "rule__VariableDeclaration__Group__0");
			builder.put(grammarAccess.getProcedureAndFunctionDeclarationPartAccess().getGroup(), "rule__ProcedureAndFunctionDeclarationPart__Group__0");
			builder.put(grammarAccess.getProcedureDeclarationAccess().getGroup(), "rule__ProcedureDeclaration__Group__0");
			builder.put(grammarAccess.getFormalParameterListAccess().getGroup(), "rule__FormalParameterList__Group__0");
			builder.put(grammarAccess.getFormalParameterListAccess().getGroup_2(), "rule__FormalParameterList__Group_2__0");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getGroup_1(), "rule__FormalParameterSection__Group_1__0");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getGroup_2(), "rule__FormalParameterSection__Group_2__0");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getGroup_3(), "rule__FormalParameterSection__Group_3__0");
			builder.put(grammarAccess.getParameterGroupAccess().getGroup(), "rule__ParameterGroup__Group__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup(), "rule__IdentifierList__Group__0");
			builder.put(grammarAccess.getIdentifierListAccess().getGroup_1(), "rule__IdentifierList__Group_1__0");
			builder.put(grammarAccess.getConstListAccess().getGroup(), "rule__ConstList__Group__0");
			builder.put(grammarAccess.getConstListAccess().getGroup_1(), "rule__ConstList__Group_1__0");
			builder.put(grammarAccess.getFunctionDeclarationAccess().getGroup(), "rule__FunctionDeclaration__Group__0");
			builder.put(grammarAccess.getStatementAccess().getGroup_0(), "rule__Statement__Group_0__0");
			builder.put(grammarAccess.getUnlabelledStatementAccess().getGroup_0(), "rule__UnlabelledStatement__Group_0__0");
			builder.put(grammarAccess.getAssignmentStatementAccess().getGroup(), "rule__AssignmentStatement__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup(), "rule__Variable__Group__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_0_0(), "rule__Variable__Group_0_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_0(), "rule__Variable__Group_1_0__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_0_2(), "rule__Variable__Group_1_0_2__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1(), "rule__Variable__Group_1_1__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_1_2(), "rule__Variable__Group_1_1_2__0");
			builder.put(grammarAccess.getVariableAccess().getGroup_1_2(), "rule__Variable__Group_1_2__0");
			builder.put(grammarAccess.getSimpleExpressionAccess().getGroup(), "rule__SimpleExpression__Group__0");
			builder.put(grammarAccess.getSimpleExpressionAccess().getGroup_1(), "rule__SimpleExpression__Group_1__0");
			builder.put(grammarAccess.getTermAccess().getGroup(), "rule__Term__Group__0");
			builder.put(grammarAccess.getTermAccess().getGroup_1(), "rule__Term__Group_1__0");
			builder.put(grammarAccess.getSignedFactorAccess().getGroup(), "rule__SignedFactor__Group__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_1(), "rule__Factor__Group_1__0");
			builder.put(grammarAccess.getFactorAccess().getGroup_4(), "rule__Factor__Group_4__0");
			builder.put(grammarAccess.getFunctionDesignatorAccess().getGroup(), "rule__FunctionDesignator__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup(), "rule__ParameterList__Group__0");
			builder.put(grammarAccess.getParameterListAccess().getGroup_1(), "rule__ParameterList__Group_1__0");
			builder.put(grammarAccess.getProcedureStatementAccess().getGroup(), "rule__ProcedureStatement__Group__0");
			builder.put(grammarAccess.getProcedureStatementAccess().getGroup_1(), "rule__ProcedureStatement__Group_1__0");
			builder.put(grammarAccess.getGotoStatementAccess().getGroup(), "rule__GotoStatement__Group__0");
			builder.put(grammarAccess.getCompoundStatementAccess().getGroup(), "rule__CompoundStatement__Group__0");
			builder.put(grammarAccess.getStatementsAccess().getGroup(), "rule__Statements__Group__0");
			builder.put(grammarAccess.getStatementsAccess().getGroup_1(), "rule__Statements__Group_1__0");
			builder.put(grammarAccess.getRepeatStatementAccess().getGroup(), "rule__RepeatStatement__Group__0");
			builder.put(grammarAccess.getWithStatementAccess().getGroup(), "rule__WithStatement__Group__0");
			builder.put(grammarAccess.getRecordVariableListAccess().getGroup(), "rule__RecordVariableList__Group__0");
			builder.put(grammarAccess.getRecordVariableListAccess().getGroup_1(), "rule__RecordVariableList__Group_1__0");
			builder.put(grammarAccess.getToBeginAccess().getElementsAssignment(), "rule__ToBegin__ElementsAssignment");
			builder.put(grammarAccess.getProgramStartAccess().getProgramHeadingAssignment_0(), "rule__ProgramStart__ProgramHeadingAssignment_0");
			builder.put(grammarAccess.getProgramStartAccess().getInterfaceAssignment_1(), "rule__ProgramStart__InterfaceAssignment_1");
			builder.put(grammarAccess.getProgramStartAccess().getBlockAssignment_2(), "rule__ProgramStart__BlockAssignment_2");
			builder.put(grammarAccess.getProgramHeadingAccess().getIdentifier1Assignment_0_1(), "rule__ProgramHeading__Identifier1Assignment_0_1");
			builder.put(grammarAccess.getProgramHeadingAccess().getIdentifierListAssignment_0_2_1(), "rule__ProgramHeading__IdentifierListAssignment_0_2_1");
			builder.put(grammarAccess.getProgramHeadingAccess().getIdentifier2Assignment_1_2(), "rule__ProgramHeading__Identifier2Assignment_1_2");
			builder.put(grammarAccess.getIdentifierAccess().getIdentifierAssignment(), "rule__Identifier__IdentifierAssignment");
			builder.put(grammarAccess.getBlockAccess().getLabelDeclarationPartAssignment_0_0(), "rule__Block__LabelDeclarationPartAssignment_0_0");
			builder.put(grammarAccess.getBlockAccess().getConstantDefinitionPartAssignment_0_1(), "rule__Block__ConstantDefinitionPartAssignment_0_1");
			builder.put(grammarAccess.getBlockAccess().getTypeDefinitionPartAssignment_0_2(), "rule__Block__TypeDefinitionPartAssignment_0_2");
			builder.put(grammarAccess.getBlockAccess().getVariableDeclarationPartAssignment_0_3(), "rule__Block__VariableDeclarationPartAssignment_0_3");
			builder.put(grammarAccess.getBlockAccess().getProcedureAndFunctionDeclarationPartAssignment_0_4(), "rule__Block__ProcedureAndFunctionDeclarationPartAssignment_0_4");
			builder.put(grammarAccess.getBlockAccess().getUsesUnitsPartAssignment_0_5(), "rule__Block__UsesUnitsPartAssignment_0_5");
			builder.put(grammarAccess.getBlockAccess().getImplemeTerminalAssignment_0_6(), "rule__Block__ImplemeTerminalAssignment_0_6");
			builder.put(grammarAccess.getBlockAccess().getCompoundStatementAssignment_1(), "rule__Block__CompoundStatementAssignment_1");
			builder.put(grammarAccess.getUsesUnitsPartAccess().getIdentifierListAssignment_1(), "rule__UsesUnitsPart__IdentifierListAssignment_1");
			builder.put(grammarAccess.getLabelDeclarationPartAccess().getLabelStart1Assignment_1(), "rule__LabelDeclarationPart__LabelStart1Assignment_1");
			builder.put(grammarAccess.getLabelDeclarationPartAccess().getCommaTerminalAssignment_2_0(), "rule__LabelDeclarationPart__CommaTerminalAssignment_2_0");
			builder.put(grammarAccess.getLabelDeclarationPartAccess().getLabelStart2Assignment_2_1(), "rule__LabelDeclarationPart__LabelStart2Assignment_2_1");
			builder.put(grammarAccess.getLabelStartAccess().getUnsignedIntegerAssignment(), "rule__LabelStart__UnsignedIntegerAssignment");
			builder.put(grammarAccess.getConstantDefinitionPartAccess().getConstantDefinitionAssignment_1_0(), "rule__ConstantDefinitionPart__ConstantDefinitionAssignment_1_0");
			builder.put(grammarAccess.getConstantDefinitionPartAccess().getSemiTerminalAssignment_1_1(), "rule__ConstantDefinitionPart__SemiTerminalAssignment_1_1");
			builder.put(grammarAccess.getConstantDefinitionAccess().getIDAssignment_0(), "rule__ConstantDefinition__IDAssignment_0");
			builder.put(grammarAccess.getConstantDefinitionAccess().getConstantAssignment_2(), "rule__ConstantDefinition__ConstantAssignment_2");
			builder.put(grammarAccess.getConstantChrAccess().getUnsignedIntegerAssignment_2(), "rule__ConstantChr__UnsignedIntegerAssignment_2");
			builder.put(grammarAccess.getConstantAccess().getUnsignedNumberAssignment_0(), "rule__Constant__UnsignedNumberAssignment_0");
			builder.put(grammarAccess.getConstantAccess().getSign1Assignment_1_0(), "rule__Constant__Sign1Assignment_1_0");
			builder.put(grammarAccess.getConstantAccess().getUnsignedNumberAssignment_1_1(), "rule__Constant__UnsignedNumberAssignment_1_1");
			builder.put(grammarAccess.getConstantAccess().getIdentifier1Assignment_2(), "rule__Constant__Identifier1Assignment_2");
			builder.put(grammarAccess.getConstantAccess().getSign2Assignment_3_0(), "rule__Constant__Sign2Assignment_3_0");
			builder.put(grammarAccess.getConstantAccess().getIdentifier2Assignment_3_1(), "rule__Constant__Identifier2Assignment_3_1");
			builder.put(grammarAccess.getConstantAccess().getStringAssignment_4(), "rule__Constant__StringAssignment_4");
			builder.put(grammarAccess.getConstantAccess().getConstantChrAssignment_5(), "rule__Constant__ConstantChrAssignment_5");
			builder.put(grammarAccess.getUnsignedNumberAccess().getUnsignedIntegerAssignment_0(), "rule__UnsignedNumber__UnsignedIntegerAssignment_0");
			builder.put(grammarAccess.getUnsignedNumberAccess().getUnsignedRealAssignment_1(), "rule__UnsignedNumber__UnsignedRealAssignment_1");
			builder.put(grammarAccess.getUnsignedIntegerAccess().getUnsignedIntegerAssignment(), "rule__UnsignedInteger__UnsignedIntegerAssignment");
			builder.put(grammarAccess.getUnsignedRealAccess().getUnsignedRealAssignment(), "rule__UnsignedReal__UnsignedRealAssignment");
			builder.put(grammarAccess.getSignAccess().getSignAssignment(), "rule__Sign__SignAssignment");
			builder.put(grammarAccess.getBoolAccess().getBoolAssignment(), "rule__Bool__BoolAssignment");
			builder.put(grammarAccess.getStringStartAccess().getStringStartAssignment(), "rule__StringStart__StringStartAssignment");
			builder.put(grammarAccess.getTypeDefinitionPartAccess().getTypeDefinitionAssignment_1_0(), "rule__TypeDefinitionPart__TypeDefinitionAssignment_1_0");
			builder.put(grammarAccess.getTypeDefinitionPartAccess().getSemiTerminalAssignment_1_1(), "rule__TypeDefinitionPart__SemiTerminalAssignment_1_1");
			builder.put(grammarAccess.getTypeDefinitionAccess().getID1Assignment_0(), "rule__TypeDefinition__ID1Assignment_0");
			builder.put(grammarAccess.getTypeDefinitionAccess().getTypeAssignment_2(), "rule__TypeDefinition__TypeAssignment_2");
			builder.put(grammarAccess.getFunctionTypeAccess().getFormalParameterListAssignment_1(), "rule__FunctionType__FormalParameterListAssignment_1");
			builder.put(grammarAccess.getFunctionTypeAccess().getResultTypeAssignment_3(), "rule__FunctionType__ResultTypeAssignment_3");
			builder.put(grammarAccess.getProcedureTypeAccess().getFormalParameterListAssignment_2(), "rule__ProcedureType__FormalParameterListAssignment_2");
			builder.put(grammarAccess.getTypeStartAccess().getTypeStartAssignment(), "rule__TypeStart__TypeStartAssignment");
			builder.put(grammarAccess.getSimpleTypeAccess().getSimpleTypeAssignment(), "rule__SimpleType__SimpleTypeAssignment");
			builder.put(grammarAccess.getScalarTypeAccess().getIdentifierListAssignment_1(), "rule__ScalarType__IdentifierListAssignment_1");
			builder.put(grammarAccess.getSubrangeTypeAccess().getConstant1Assignment_0(), "rule__SubrangeType__Constant1Assignment_0");
			builder.put(grammarAccess.getSubrangeTypeAccess().getConstan2Assignment_2(), "rule__SubrangeType__Constan2Assignment_2");
			builder.put(grammarAccess.getTypeIdentifierAccess().getIdentifierAssignment_0(), "rule__TypeIdentifier__IdentifierAssignment_0");
			builder.put(grammarAccess.getTypeIdentifierAccess().getTypeAssignment_1(), "rule__TypeIdentifier__TypeAssignment_1");
			builder.put(grammarAccess.getStructuredTypeAccess().getUnpackedStructuredType1Assignment_0_1(), "rule__StructuredType__UnpackedStructuredType1Assignment_0_1");
			builder.put(grammarAccess.getStructuredTypeAccess().getUnpackedStructuredType2Assignment_1(), "rule__StructuredType__UnpackedStructuredType2Assignment_1");
			builder.put(grammarAccess.getUnpackedStructuredTypeAccess().getUnpackedStructuredTypeAssignment(), "rule__UnpackedStructuredType__UnpackedStructuredTypeAssignment");
			builder.put(grammarAccess.getStringtypeAccess().getStringTerminalAssignment_0(), "rule__Stringtype__StringTerminalAssignment_0");
			builder.put(grammarAccess.getStringtypeAccess().getIDAssignment_2_0(), "rule__Stringtype__IDAssignment_2_0");
			builder.put(grammarAccess.getStringtypeAccess().getUnsignedNumberAssignment_2_1(), "rule__Stringtype__UnsignedNumberAssignment_2_1");
			builder.put(grammarAccess.getRecordTypeAccess().getFieldListAssignment_2_0(), "rule__RecordType__FieldListAssignment_2_0");
			builder.put(grammarAccess.getRecordTypeAccess().getSemiTerminalAssignment_2_1(), "rule__RecordType__SemiTerminalAssignment_2_1");
			builder.put(grammarAccess.getFieldListAccess().getFixedPartAssignment_0_0(), "rule__FieldList__FixedPartAssignment_0_0");
			builder.put(grammarAccess.getFieldListAccess().getSemiTerminalAssignment_0_1_0(), "rule__FieldList__SemiTerminalAssignment_0_1_0");
			builder.put(grammarAccess.getFieldListAccess().getVariantPart1Assignment_0_1_1(), "rule__FieldList__VariantPart1Assignment_0_1_1");
			builder.put(grammarAccess.getFieldListAccess().getVariantPart2Assignment_1(), "rule__FieldList__VariantPart2Assignment_1");
			builder.put(grammarAccess.getFixedPartAccess().getSemiTerminalAssignment_1_0(), "rule__FixedPart__SemiTerminalAssignment_1_0");
			builder.put(grammarAccess.getFixedPartAccess().getRecordSectionAssignment_1_1(), "rule__FixedPart__RecordSectionAssignment_1_1");
			builder.put(grammarAccess.getRecordSectionAccess().getIdentifierListAssignment_0(), "rule__RecordSection__IdentifierListAssignment_0");
			builder.put(grammarAccess.getRecordSectionAccess().getTypeStartAssignment_2(), "rule__RecordSection__TypeStartAssignment_2");
			builder.put(grammarAccess.getVariantPartAccess().getTagAssignment_1(), "rule__VariantPart__TagAssignment_1");
			builder.put(grammarAccess.getVariantPartAccess().getVariant1Assignment_3(), "rule__VariantPart__Variant1Assignment_3");
			builder.put(grammarAccess.getVariantPartAccess().getSemiTerminalAssignment_4_0(), "rule__VariantPart__SemiTerminalAssignment_4_0");
			builder.put(grammarAccess.getVariantPartAccess().getVariant2Assignment_4_1(), "rule__VariantPart__Variant2Assignment_4_1");
			builder.put(grammarAccess.getTagAccess().getIDAssignment_0_0(), "rule__Tag__IDAssignment_0_0");
			builder.put(grammarAccess.getTagAccess().getTypeIdentifier1Assignment_0_2(), "rule__Tag__TypeIdentifier1Assignment_0_2");
			builder.put(grammarAccess.getTagAccess().getTypeIdentifier2Assignment_1(), "rule__Tag__TypeIdentifier2Assignment_1");
			builder.put(grammarAccess.getVariantAccess().getConstListAssignment_0(), "rule__Variant__ConstListAssignment_0");
			builder.put(grammarAccess.getVariantAccess().getFieldListAssignment_3(), "rule__Variant__FieldListAssignment_3");
			builder.put(grammarAccess.getPointerTypeAccess().getTypeIdentifierAssignment_1(), "rule__PointerType__TypeIdentifierAssignment_1");
			builder.put(grammarAccess.getVariableDeclarationPartAccess().getVariableDeclaration1Assignment_1(), "rule__VariableDeclarationPart__VariableDeclaration1Assignment_1");
			builder.put(grammarAccess.getVariableDeclarationPartAccess().getSemiTerminalAssignment_2_0(), "rule__VariableDeclarationPart__SemiTerminalAssignment_2_0");
			builder.put(grammarAccess.getVariableDeclarationPartAccess().getVariableDeclaration2Assignment_2_1(), "rule__VariableDeclarationPart__VariableDeclaration2Assignment_2_1");
			builder.put(grammarAccess.getVariableDeclarationAccess().getIdentifierListAssignment_0(), "rule__VariableDeclaration__IdentifierListAssignment_0");
			builder.put(grammarAccess.getVariableDeclarationAccess().getTypeStartAssignment_2(), "rule__VariableDeclaration__TypeStartAssignment_2");
			builder.put(grammarAccess.getProcedureAndFunctionDeclarationPartAccess().getProcedureOrFunctionDeclarationAssignment_0(), "rule__ProcedureAndFunctionDeclarationPart__ProcedureOrFunctionDeclarationAssignment_0");
			builder.put(grammarAccess.getProcedureOrFunctionDeclarationAccess().getProcedureDeclarationAssignment_0(), "rule__ProcedureOrFunctionDeclaration__ProcedureDeclarationAssignment_0");
			builder.put(grammarAccess.getProcedureOrFunctionDeclarationAccess().getFunctionDeclarationAssignment_1(), "rule__ProcedureOrFunctionDeclaration__FunctionDeclarationAssignment_1");
			builder.put(grammarAccess.getProcedureDeclarationAccess().getIdentifierAssignment_1(), "rule__ProcedureDeclaration__IdentifierAssignment_1");
			builder.put(grammarAccess.getProcedureDeclarationAccess().getFormalParameterListAssignment_2(), "rule__ProcedureDeclaration__FormalParameterListAssignment_2");
			builder.put(grammarAccess.getProcedureDeclarationAccess().getBlockAssignment_4(), "rule__ProcedureDeclaration__BlockAssignment_4");
			builder.put(grammarAccess.getFormalParameterListAccess().getFormalParameterSection1Assignment_1(), "rule__FormalParameterList__FormalParameterSection1Assignment_1");
			builder.put(grammarAccess.getFormalParameterListAccess().getSemiterminalAssignment_2_0(), "rule__FormalParameterList__SemiterminalAssignment_2_0");
			builder.put(grammarAccess.getFormalParameterListAccess().getFormalParameterSection2Assignment_2_1(), "rule__FormalParameterList__FormalParameterSection2Assignment_2_1");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getParameterGroupAssignment_0(), "rule__FormalParameterSection__ParameterGroupAssignment_0");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getParameterGroupAssignment_1_1(), "rule__FormalParameterSection__ParameterGroupAssignment_1_1");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getParameterGroupAssignment_2_1(), "rule__FormalParameterSection__ParameterGroupAssignment_2_1");
			builder.put(grammarAccess.getFormalParameterSectionAccess().getParameterGroupAssignment_3_1(), "rule__FormalParameterSection__ParameterGroupAssignment_3_1");
			builder.put(grammarAccess.getParameterGroupAccess().getIdentifierListAssignment_0(), "rule__ParameterGroup__IdentifierListAssignment_0");
			builder.put(grammarAccess.getParameterGroupAccess().getTypeIdentifierAssignment_2(), "rule__ParameterGroup__TypeIdentifierAssignment_2");
			builder.put(grammarAccess.getIdentifierListAccess().getIdentifier1Assignment_0(), "rule__IdentifierList__Identifier1Assignment_0");
			builder.put(grammarAccess.getIdentifierListAccess().getCommaTerminalAssignment_1_0(), "rule__IdentifierList__CommaTerminalAssignment_1_0");
			builder.put(grammarAccess.getIdentifierListAccess().getIdentifier2Assignment_1_1(), "rule__IdentifierList__Identifier2Assignment_1_1");
			builder.put(grammarAccess.getConstListAccess().getConstant1Assignment_0(), "rule__ConstList__Constant1Assignment_0");
			builder.put(grammarAccess.getConstListAccess().getCommaTerminalAssignment_1_0(), "rule__ConstList__CommaTerminalAssignment_1_0");
			builder.put(grammarAccess.getConstListAccess().getConstant2Assignment_1_1(), "rule__ConstList__Constant2Assignment_1_1");
			builder.put(grammarAccess.getFunctionDeclarationAccess().getIdentifierAssignment_1(), "rule__FunctionDeclaration__IdentifierAssignment_1");
			builder.put(grammarAccess.getFunctionDeclarationAccess().getFormalParameterListAssignment_2(), "rule__FunctionDeclaration__FormalParameterListAssignment_2");
			builder.put(grammarAccess.getFunctionDeclarationAccess().getResultTypeAssignment_4(), "rule__FunctionDeclaration__ResultTypeAssignment_4");
			builder.put(grammarAccess.getFunctionDeclarationAccess().getBlockAssignment_6(), "rule__FunctionDeclaration__BlockAssignment_6");
			builder.put(grammarAccess.getResultTypeAccess().getTypeIdentifierAssignment(), "rule__ResultType__TypeIdentifierAssignment");
			builder.put(grammarAccess.getStatementAccess().getLabelStartAssignment_0_0(), "rule__Statement__LabelStartAssignment_0_0");
			builder.put(grammarAccess.getStatementAccess().getUnlabelledStatementAssignment_0_2(), "rule__Statement__UnlabelledStatementAssignment_0_2");
			builder.put(grammarAccess.getStatementAccess().getUnlabelledStatementAssignment_1(), "rule__Statement__UnlabelledStatementAssignment_1");
			builder.put(grammarAccess.getUnlabelledStatementAccess().getSimpleStatementAssignment_0_1(), "rule__UnlabelledStatement__SimpleStatementAssignment_0_1");
			builder.put(grammarAccess.getUnlabelledStatementAccess().getStructuredStatementAssignment_1(), "rule__UnlabelledStatement__StructuredStatementAssignment_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getAssignmentStatementAssignment_0(), "rule__SimpleStatement__AssignmentStatementAssignment_0");
			builder.put(grammarAccess.getSimpleStatementAccess().getProcedureStatementAssignment_1(), "rule__SimpleStatement__ProcedureStatementAssignment_1");
			builder.put(grammarAccess.getSimpleStatementAccess().getGotoStatementAssignment_2(), "rule__SimpleStatement__GotoStatementAssignment_2");
			builder.put(grammarAccess.getAssignmentStatementAccess().getVariableAssignment_0(), "rule__AssignmentStatement__VariableAssignment_0");
			builder.put(grammarAccess.getAssignmentStatementAccess().getExpressionAssignment_2(), "rule__AssignmentStatement__ExpressionAssignment_2");
			builder.put(grammarAccess.getVariableAccess().getIdentifier1Assignment_0_0_1(), "rule__Variable__Identifier1Assignment_0_0_1");
			builder.put(grammarAccess.getVariableAccess().getIdentifier2Assignment_0_1(), "rule__Variable__Identifier2Assignment_0_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_1(), "rule__Variable__ExpressionAssignment_1_0_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_0_2_1(), "rule__Variable__ExpressionAssignment_1_0_2_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_1(), "rule__Variable__ExpressionAssignment_1_1_1");
			builder.put(grammarAccess.getVariableAccess().getExpressionAssignment_1_1_2_1(), "rule__Variable__ExpressionAssignment_1_1_2_1");
			builder.put(grammarAccess.getVariableAccess().getIdentifier3Assignment_1_2_1(), "rule__Variable__Identifier3Assignment_1_2_1");
			builder.put(grammarAccess.getExpressionAccess().getSimpleExpressionAssignment(), "rule__Expression__SimpleExpressionAssignment");
			builder.put(grammarAccess.getSimpleExpressionAccess().getTermAssignment_0(), "rule__SimpleExpression__TermAssignment_0");
			builder.put(grammarAccess.getSimpleExpressionAccess().getSimpleExpressionAssignment_1_1(), "rule__SimpleExpression__SimpleExpressionAssignment_1_1");
			builder.put(grammarAccess.getTermAccess().getSignedFactorAssignment_0(), "rule__Term__SignedFactorAssignment_0");
			builder.put(grammarAccess.getTermAccess().getTermAssignment_1_1(), "rule__Term__TermAssignment_1_1");
			builder.put(grammarAccess.getSignedFactorAccess().getFactorAssignment_1(), "rule__SignedFactor__FactorAssignment_1");
			builder.put(grammarAccess.getFactorAccess().getVariableAssignment_0(), "rule__Factor__VariableAssignment_0");
			builder.put(grammarAccess.getFactorAccess().getExpressionAssignment_1_1(), "rule__Factor__ExpressionAssignment_1_1");
			builder.put(grammarAccess.getFactorAccess().getFunctionDesignatorAssignment_2(), "rule__Factor__FunctionDesignatorAssignment_2");
			builder.put(grammarAccess.getFactorAccess().getUnsignedConstantAssignment_3(), "rule__Factor__UnsignedConstantAssignment_3");
			builder.put(grammarAccess.getFactorAccess().getNotAssignment_4_0(), "rule__Factor__NotAssignment_4_0");
			builder.put(grammarAccess.getFactorAccess().getFactorAssignment_4_1(), "rule__Factor__FactorAssignment_4_1");
			builder.put(grammarAccess.getFactorAccess().getBoolAssignment_5(), "rule__Factor__BoolAssignment_5");
			builder.put(grammarAccess.getUnsignedConstantAccess().getUnsignedNumberAssignment_0(), "rule__UnsignedConstant__UnsignedNumberAssignment_0");
			builder.put(grammarAccess.getUnsignedConstantAccess().getConstantChrAssignment_1(), "rule__UnsignedConstant__ConstantChrAssignment_1");
			builder.put(grammarAccess.getUnsignedConstantAccess().getStringStartAssignment_2(), "rule__UnsignedConstant__StringStartAssignment_2");
			builder.put(grammarAccess.getUnsignedConstantAccess().getNilAssignment_3(), "rule__UnsignedConstant__NilAssignment_3");
			builder.put(grammarAccess.getFunctionDesignatorAccess().getIdentifierAssignment_0(), "rule__FunctionDesignator__IdentifierAssignment_0");
			builder.put(grammarAccess.getFunctionDesignatorAccess().getParameterListAssignment_2(), "rule__FunctionDesignator__ParameterListAssignment_2");
			builder.put(grammarAccess.getParameterListAccess().getActualParameter1Assignment_0(), "rule__ParameterList__ActualParameter1Assignment_0");
			builder.put(grammarAccess.getParameterListAccess().getActualParameter2Assignment_1_1(), "rule__ParameterList__ActualParameter2Assignment_1_1");
			builder.put(grammarAccess.getProcedureStatementAccess().getIdentifierAssignment_0(), "rule__ProcedureStatement__IdentifierAssignment_0");
			builder.put(grammarAccess.getProcedureStatementAccess().getParameterListAssignment_1_1(), "rule__ProcedureStatement__ParameterListAssignment_1_1");
			builder.put(grammarAccess.getActualParameterAccess().getExpressionAssignment(), "rule__ActualParameter__ExpressionAssignment");
			builder.put(grammarAccess.getGotoStatementAccess().getLabelStartAssignment_1(), "rule__GotoStatement__LabelStartAssignment_1");
			builder.put(grammarAccess.getStructuredStatementAccess().getCompoundStatementAssignment_0(), "rule__StructuredStatement__CompoundStatementAssignment_0");
			builder.put(grammarAccess.getStructuredStatementAccess().getRepetetiveStatementAssignment_1(), "rule__StructuredStatement__RepetetiveStatementAssignment_1");
			builder.put(grammarAccess.getStructuredStatementAccess().getWithStatementAssignment_2(), "rule__StructuredStatement__WithStatementAssignment_2");
			builder.put(grammarAccess.getCompoundStatementAccess().getStatementsAssignment_1(), "rule__CompoundStatement__StatementsAssignment_1");
			builder.put(grammarAccess.getStatementsAccess().getStatement1Assignment_0(), "rule__Statements__Statement1Assignment_0");
			builder.put(grammarAccess.getStatementsAccess().getSemiTerminal1Assignment_1_0(), "rule__Statements__SemiTerminal1Assignment_1_0");
			builder.put(grammarAccess.getStatementsAccess().getStatement2Assignment_1_1(), "rule__Statements__Statement2Assignment_1_1");
			builder.put(grammarAccess.getStatementsAccess().getSemiTerminal2Assignment_2(), "rule__Statements__SemiTerminal2Assignment_2");
			builder.put(grammarAccess.getRepeatStatementAccess().getStatementAssignment_1(), "rule__RepeatStatement__StatementAssignment_1");
			builder.put(grammarAccess.getRepeatStatementAccess().getExpressionAssignment_3(), "rule__RepeatStatement__ExpressionAssignment_3");
			builder.put(grammarAccess.getWithStatementAccess().getRecordVariableListAssignment_1(), "rule__WithStatement__RecordVariableListAssignment_1");
			builder.put(grammarAccess.getWithStatementAccess().getStatementAssignment_3(), "rule__WithStatement__StatementAssignment_3");
			builder.put(grammarAccess.getRecordVariableListAccess().getVariable1Assignment_0(), "rule__RecordVariableList__Variable1Assignment_0");
			builder.put(grammarAccess.getRecordVariableListAccess().getCommaTerminalAssignment_1_0(), "rule__RecordVariableList__CommaTerminalAssignment_1_0");
			builder.put(grammarAccess.getRecordVariableListAccess().getVariable2Assignment_1_1(), "rule__RecordVariableList__Variable2Assignment_1_1");
		}
	}
	
	@Inject
	private NameMappings nameMappings;

	@Inject
	private PascalGrammarAccess grammarAccess;

	@Override
	protected InternalPascalParser createParser() {
		InternalPascalParser result = new InternalPascalParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}

	@Override
	protected String getRuleName(AbstractElement element) {
		return nameMappings.getRuleName(element);
	}

	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}

	public PascalGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}

	public void setGrammarAccess(PascalGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
	
	public NameMappings getNameMappings() {
		return nameMappings;
	}
	
	public void setNameMappings(NameMappings nameMappings) {
		this.nameMappings = nameMappings;
	}
}
