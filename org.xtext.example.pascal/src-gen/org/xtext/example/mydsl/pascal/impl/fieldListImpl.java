/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.fieldList;
import org.xtext.example.mydsl.pascal.fixedPart;
import org.xtext.example.mydsl.pascal.variantPart;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>field List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl#getFixedPart <em>Fixed Part</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl#getSemiTerminal <em>Semi Terminal</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl#getVariantPart1 <em>Variant Part1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl#getVariantPart2 <em>Variant Part2</em>}</li>
 * </ul>
 *
 * @generated
 */
public class fieldListImpl extends MinimalEObjectImpl.Container implements fieldList
{
  /**
   * The cached value of the '{@link #getFixedPart() <em>Fixed Part</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFixedPart()
   * @generated
   * @ordered
   */
  protected fixedPart fixedPart;

  /**
   * The default value of the '{@link #getSemiTerminal() <em>Semi Terminal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemiTerminal()
   * @generated
   * @ordered
   */
  protected static final String SEMI_TERMINAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSemiTerminal() <em>Semi Terminal</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSemiTerminal()
   * @generated
   * @ordered
   */
  protected String semiTerminal = SEMI_TERMINAL_EDEFAULT;

  /**
   * The cached value of the '{@link #getVariantPart1() <em>Variant Part1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariantPart1()
   * @generated
   * @ordered
   */
  protected variantPart variantPart1;

  /**
   * The cached value of the '{@link #getVariantPart2() <em>Variant Part2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariantPart2()
   * @generated
   * @ordered
   */
  protected variantPart variantPart2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected fieldListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.FIELD_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public fixedPart getFixedPart()
  {
    return fixedPart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFixedPart(fixedPart newFixedPart, NotificationChain msgs)
  {
    fixedPart oldFixedPart = fixedPart;
    fixedPart = newFixedPart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__FIXED_PART, oldFixedPart, newFixedPart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFixedPart(fixedPart newFixedPart)
  {
    if (newFixedPart != fixedPart)
    {
      NotificationChain msgs = null;
      if (fixedPart != null)
        msgs = ((InternalEObject)fixedPart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__FIXED_PART, null, msgs);
      if (newFixedPart != null)
        msgs = ((InternalEObject)newFixedPart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__FIXED_PART, null, msgs);
      msgs = basicSetFixedPart(newFixedPart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__FIXED_PART, newFixedPart, newFixedPart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getSemiTerminal()
  {
    return semiTerminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setSemiTerminal(String newSemiTerminal)
  {
    String oldSemiTerminal = semiTerminal;
    semiTerminal = newSemiTerminal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__SEMI_TERMINAL, oldSemiTerminal, semiTerminal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public variantPart getVariantPart1()
  {
    return variantPart1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariantPart1(variantPart newVariantPart1, NotificationChain msgs)
  {
    variantPart oldVariantPart1 = variantPart1;
    variantPart1 = newVariantPart1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__VARIANT_PART1, oldVariantPart1, newVariantPart1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariantPart1(variantPart newVariantPart1)
  {
    if (newVariantPart1 != variantPart1)
    {
      NotificationChain msgs = null;
      if (variantPart1 != null)
        msgs = ((InternalEObject)variantPart1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__VARIANT_PART1, null, msgs);
      if (newVariantPart1 != null)
        msgs = ((InternalEObject)newVariantPart1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__VARIANT_PART1, null, msgs);
      msgs = basicSetVariantPart1(newVariantPart1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__VARIANT_PART1, newVariantPart1, newVariantPart1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public variantPart getVariantPart2()
  {
    return variantPart2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVariantPart2(variantPart newVariantPart2, NotificationChain msgs)
  {
    variantPart oldVariantPart2 = variantPart2;
    variantPart2 = newVariantPart2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__VARIANT_PART2, oldVariantPart2, newVariantPart2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariantPart2(variantPart newVariantPart2)
  {
    if (newVariantPart2 != variantPart2)
    {
      NotificationChain msgs = null;
      if (variantPart2 != null)
        msgs = ((InternalEObject)variantPart2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__VARIANT_PART2, null, msgs);
      if (newVariantPart2 != null)
        msgs = ((InternalEObject)newVariantPart2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FIELD_LIST__VARIANT_PART2, null, msgs);
      msgs = basicSetVariantPart2(newVariantPart2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FIELD_LIST__VARIANT_PART2, newVariantPart2, newVariantPart2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.FIELD_LIST__FIXED_PART:
        return basicSetFixedPart(null, msgs);
      case PascalPackage.FIELD_LIST__VARIANT_PART1:
        return basicSetVariantPart1(null, msgs);
      case PascalPackage.FIELD_LIST__VARIANT_PART2:
        return basicSetVariantPart2(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.FIELD_LIST__FIXED_PART:
        return getFixedPart();
      case PascalPackage.FIELD_LIST__SEMI_TERMINAL:
        return getSemiTerminal();
      case PascalPackage.FIELD_LIST__VARIANT_PART1:
        return getVariantPart1();
      case PascalPackage.FIELD_LIST__VARIANT_PART2:
        return getVariantPart2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.FIELD_LIST__FIXED_PART:
        setFixedPart((fixedPart)newValue);
        return;
      case PascalPackage.FIELD_LIST__SEMI_TERMINAL:
        setSemiTerminal((String)newValue);
        return;
      case PascalPackage.FIELD_LIST__VARIANT_PART1:
        setVariantPart1((variantPart)newValue);
        return;
      case PascalPackage.FIELD_LIST__VARIANT_PART2:
        setVariantPart2((variantPart)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FIELD_LIST__FIXED_PART:
        setFixedPart((fixedPart)null);
        return;
      case PascalPackage.FIELD_LIST__SEMI_TERMINAL:
        setSemiTerminal(SEMI_TERMINAL_EDEFAULT);
        return;
      case PascalPackage.FIELD_LIST__VARIANT_PART1:
        setVariantPart1((variantPart)null);
        return;
      case PascalPackage.FIELD_LIST__VARIANT_PART2:
        setVariantPart2((variantPart)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FIELD_LIST__FIXED_PART:
        return fixedPart != null;
      case PascalPackage.FIELD_LIST__SEMI_TERMINAL:
        return SEMI_TERMINAL_EDEFAULT == null ? semiTerminal != null : !SEMI_TERMINAL_EDEFAULT.equals(semiTerminal);
      case PascalPackage.FIELD_LIST__VARIANT_PART1:
        return variantPart1 != null;
      case PascalPackage.FIELD_LIST__VARIANT_PART2:
        return variantPart2 != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (semiTerminal: ");
    result.append(semiTerminal);
    result.append(')');
    return result.toString();
  }

} //fieldListImpl
