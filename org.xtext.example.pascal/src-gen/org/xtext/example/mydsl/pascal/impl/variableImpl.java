/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.pascal.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.expression;
import org.xtext.example.mydsl.pascal.identifier;
import org.xtext.example.mydsl.pascal.variable;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>variable</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.variableImpl#getIdentifier1 <em>Identifier1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.variableImpl#getIdentifier2 <em>Identifier2</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.variableImpl#getExpression <em>Expression</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.variableImpl#getIdentifier3 <em>Identifier3</em>}</li>
 * </ul>
 *
 * @generated
 */
public class variableImpl extends MinimalEObjectImpl.Container implements variable
{
  /**
   * The cached value of the '{@link #getIdentifier1() <em>Identifier1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier1()
   * @generated
   * @ordered
   */
  protected identifier identifier1;

  /**
   * The cached value of the '{@link #getIdentifier2() <em>Identifier2</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier2()
   * @generated
   * @ordered
   */
  protected identifier identifier2;

  /**
   * The cached value of the '{@link #getExpression() <em>Expression</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getExpression()
   * @generated
   * @ordered
   */
  protected EList<expression> expression;

  /**
   * The cached value of the '{@link #getIdentifier3() <em>Identifier3</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier3()
   * @generated
   * @ordered
   */
  protected EList<identifier> identifier3;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected variableImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.VARIABLE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier getIdentifier1()
  {
    return identifier1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIdentifier1(identifier newIdentifier1, NotificationChain msgs)
  {
    identifier oldIdentifier1 = identifier1;
    identifier1 = newIdentifier1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.VARIABLE__IDENTIFIER1, oldIdentifier1, newIdentifier1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdentifier1(identifier newIdentifier1)
  {
    if (newIdentifier1 != identifier1)
    {
      NotificationChain msgs = null;
      if (identifier1 != null)
        msgs = ((InternalEObject)identifier1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.VARIABLE__IDENTIFIER1, null, msgs);
      if (newIdentifier1 != null)
        msgs = ((InternalEObject)newIdentifier1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.VARIABLE__IDENTIFIER1, null, msgs);
      msgs = basicSetIdentifier1(newIdentifier1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.VARIABLE__IDENTIFIER1, newIdentifier1, newIdentifier1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier getIdentifier2()
  {
    return identifier2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIdentifier2(identifier newIdentifier2, NotificationChain msgs)
  {
    identifier oldIdentifier2 = identifier2;
    identifier2 = newIdentifier2;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.VARIABLE__IDENTIFIER2, oldIdentifier2, newIdentifier2);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdentifier2(identifier newIdentifier2)
  {
    if (newIdentifier2 != identifier2)
    {
      NotificationChain msgs = null;
      if (identifier2 != null)
        msgs = ((InternalEObject)identifier2).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.VARIABLE__IDENTIFIER2, null, msgs);
      if (newIdentifier2 != null)
        msgs = ((InternalEObject)newIdentifier2).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.VARIABLE__IDENTIFIER2, null, msgs);
      msgs = basicSetIdentifier2(newIdentifier2, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.VARIABLE__IDENTIFIER2, newIdentifier2, newIdentifier2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<expression> getExpression()
  {
    if (expression == null)
    {
      expression = new EObjectContainmentEList<expression>(expression.class, this, PascalPackage.VARIABLE__EXPRESSION);
    }
    return expression;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<identifier> getIdentifier3()
  {
    if (identifier3 == null)
    {
      identifier3 = new EObjectContainmentEList<identifier>(identifier.class, this, PascalPackage.VARIABLE__IDENTIFIER3);
    }
    return identifier3;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.VARIABLE__IDENTIFIER1:
        return basicSetIdentifier1(null, msgs);
      case PascalPackage.VARIABLE__IDENTIFIER2:
        return basicSetIdentifier2(null, msgs);
      case PascalPackage.VARIABLE__EXPRESSION:
        return ((InternalEList<?>)getExpression()).basicRemove(otherEnd, msgs);
      case PascalPackage.VARIABLE__IDENTIFIER3:
        return ((InternalEList<?>)getIdentifier3()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.VARIABLE__IDENTIFIER1:
        return getIdentifier1();
      case PascalPackage.VARIABLE__IDENTIFIER2:
        return getIdentifier2();
      case PascalPackage.VARIABLE__EXPRESSION:
        return getExpression();
      case PascalPackage.VARIABLE__IDENTIFIER3:
        return getIdentifier3();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.VARIABLE__IDENTIFIER1:
        setIdentifier1((identifier)newValue);
        return;
      case PascalPackage.VARIABLE__IDENTIFIER2:
        setIdentifier2((identifier)newValue);
        return;
      case PascalPackage.VARIABLE__EXPRESSION:
        getExpression().clear();
        getExpression().addAll((Collection<? extends expression>)newValue);
        return;
      case PascalPackage.VARIABLE__IDENTIFIER3:
        getIdentifier3().clear();
        getIdentifier3().addAll((Collection<? extends identifier>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.VARIABLE__IDENTIFIER1:
        setIdentifier1((identifier)null);
        return;
      case PascalPackage.VARIABLE__IDENTIFIER2:
        setIdentifier2((identifier)null);
        return;
      case PascalPackage.VARIABLE__EXPRESSION:
        getExpression().clear();
        return;
      case PascalPackage.VARIABLE__IDENTIFIER3:
        getIdentifier3().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.VARIABLE__IDENTIFIER1:
        return identifier1 != null;
      case PascalPackage.VARIABLE__IDENTIFIER2:
        return identifier2 != null;
      case PascalPackage.VARIABLE__EXPRESSION:
        return expression != null && !expression.isEmpty();
      case PascalPackage.VARIABLE__IDENTIFIER3:
        return identifier3 != null && !identifier3.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //variableImpl
