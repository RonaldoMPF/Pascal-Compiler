/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.formalParameterSection;
import org.xtext.example.mydsl.pascal.parameterGroup;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>formal Parameter Section</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.formalParameterSectionImpl#getParameterGroup <em>Parameter Group</em>}</li>
 * </ul>
 *
 * @generated
 */
public class formalParameterSectionImpl extends MinimalEObjectImpl.Container implements formalParameterSection
{
  /**
   * The cached value of the '{@link #getParameterGroup() <em>Parameter Group</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getParameterGroup()
   * @generated
   * @ordered
   */
  protected parameterGroup parameterGroup;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected formalParameterSectionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.FORMAL_PARAMETER_SECTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public parameterGroup getParameterGroup()
  {
    return parameterGroup;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetParameterGroup(parameterGroup newParameterGroup, NotificationChain msgs)
  {
    parameterGroup oldParameterGroup = parameterGroup;
    parameterGroup = newParameterGroup;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP, oldParameterGroup, newParameterGroup);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setParameterGroup(parameterGroup newParameterGroup)
  {
    if (newParameterGroup != parameterGroup)
    {
      NotificationChain msgs = null;
      if (parameterGroup != null)
        msgs = ((InternalEObject)parameterGroup).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP, null, msgs);
      if (newParameterGroup != null)
        msgs = ((InternalEObject)newParameterGroup).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP, null, msgs);
      msgs = basicSetParameterGroup(newParameterGroup, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP, newParameterGroup, newParameterGroup));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP:
        return basicSetParameterGroup(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP:
        return getParameterGroup();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP:
        setParameterGroup((parameterGroup)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP:
        setParameterGroup((parameterGroup)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.FORMAL_PARAMETER_SECTION__PARAMETER_GROUP:
        return parameterGroup != null;
    }
    return super.eIsSet(featureID);
  }

} //formalParameterSectionImpl
