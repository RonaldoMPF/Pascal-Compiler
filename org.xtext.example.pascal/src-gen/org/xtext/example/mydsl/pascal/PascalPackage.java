/**
 * generated by Xtext 2.16.0-SNAPSHOT
 */
package org.xtext.example.mydsl.pascal;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.example.mydsl.pascal.PascalFactory
 * @model kind="package"
 * @generated
 */
public interface PascalPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pascal";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/example/mydsl/Pascal";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pascal";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PascalPackage eINSTANCE = org.xtext.example.mydsl.pascal.impl.PascalPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.toBeginImpl <em>to Begin</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.toBeginImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettoBegin()
   * @generated
   */
  int TO_BEGIN = 0;

  /**
   * The feature id for the '<em><b>Elements</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TO_BEGIN__ELEMENTS = 0;

  /**
   * The number of structural features of the '<em>to Begin</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TO_BEGIN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.programStartImpl <em>program Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.programStartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprogramStart()
   * @generated
   */
  int PROGRAM_START = 1;

  /**
   * The feature id for the '<em><b>Program Heading</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_START__PROGRAM_HEADING = 0;

  /**
   * The feature id for the '<em><b>Interface</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_START__INTERFACE = 1;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_START__BLOCK = 2;

  /**
   * The number of structural features of the '<em>program Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_START_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.programHeadingImpl <em>program Heading</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.programHeadingImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprogramHeading()
   * @generated
   */
  int PROGRAM_HEADING = 2;

  /**
   * The feature id for the '<em><b>Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING__IDENTIFIER1 = 0;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING__IDENTIFIER_LIST = 1;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING__IDENTIFIER2 = 2;

  /**
   * The number of structural features of the '<em>program Heading</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROGRAM_HEADING_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.identifierImpl <em>identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.identifierImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getidentifier()
   * @generated
   */
  int IDENTIFIER = 3;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER__IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.blockImpl <em>block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.blockImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getblock()
   * @generated
   */
  int BLOCK = 4;

  /**
   * The feature id for the '<em><b>Label Declaration Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__LABEL_DECLARATION_PART = 0;

  /**
   * The feature id for the '<em><b>Constant Definition Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__CONSTANT_DEFINITION_PART = 1;

  /**
   * The feature id for the '<em><b>Type Definition Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__TYPE_DEFINITION_PART = 2;

  /**
   * The feature id for the '<em><b>Variable Declaration Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__VARIABLE_DECLARATION_PART = 3;

  /**
   * The feature id for the '<em><b>Procedure And Function Declaration Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__PROCEDURE_AND_FUNCTION_DECLARATION_PART = 4;

  /**
   * The feature id for the '<em><b>Uses Units Part</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__USES_UNITS_PART = 5;

  /**
   * The feature id for the '<em><b>Impleme Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__IMPLEME_TERMINAL = 6;

  /**
   * The feature id for the '<em><b>Compound Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK__COMPOUND_STATEMENT = 7;

  /**
   * The number of structural features of the '<em>block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FEATURE_COUNT = 8;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.usesUnitsPartImpl <em>uses Units Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.usesUnitsPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getusesUnitsPart()
   * @generated
   */
  int USES_UNITS_PART = 5;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USES_UNITS_PART__IDENTIFIER_LIST = 0;

  /**
   * The number of structural features of the '<em>uses Units Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int USES_UNITS_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.labelDeclarationPartImpl <em>label Declaration Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.labelDeclarationPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getlabelDeclarationPart()
   * @generated
   */
  int LABEL_DECLARATION_PART = 6;

  /**
   * The feature id for the '<em><b>Label Start1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART__LABEL_START1 = 0;

  /**
   * The feature id for the '<em><b>Comma Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART__COMMA_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Label Start2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART__LABEL_START2 = 2;

  /**
   * The number of structural features of the '<em>label Declaration Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_DECLARATION_PART_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.labelStartImpl <em>label Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.labelStartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getlabelStart()
   * @generated
   */
  int LABEL_START = 7;

  /**
   * The feature id for the '<em><b>Unsigned Integer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_START__UNSIGNED_INTEGER = 0;

  /**
   * The number of structural features of the '<em>label Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int LABEL_START_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.constantDefinitionPartImpl <em>constant Definition Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.constantDefinitionPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantDefinitionPart()
   * @generated
   */
  int CONSTANT_DEFINITION_PART = 8;

  /**
   * The feature id for the '<em><b>Constant Definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART__CONSTANT_DEFINITION = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART__SEMI_TERMINAL = 1;

  /**
   * The number of structural features of the '<em>constant Definition Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_PART_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.constantDefinitionImpl <em>constant Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.constantDefinitionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantDefinition()
   * @generated
   */
  int CONSTANT_DEFINITION = 9;

  /**
   * The feature id for the '<em><b>ID</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__ID = 0;

  /**
   * The feature id for the '<em><b>Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION__CONSTANT = 1;

  /**
   * The number of structural features of the '<em>constant Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.constantChrImpl <em>constant Chr</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.constantChrImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantChr()
   * @generated
   */
  int CONSTANT_CHR = 10;

  /**
   * The feature id for the '<em><b>Unsigned Integer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_CHR__UNSIGNED_INTEGER = 0;

  /**
   * The number of structural features of the '<em>constant Chr</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_CHR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.constantImpl <em>constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.constantImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstant()
   * @generated
   */
  int CONSTANT = 11;

  /**
   * The feature id for the '<em><b>Unsigned Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__UNSIGNED_NUMBER = 0;

  /**
   * The feature id for the '<em><b>Sign1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__SIGN1 = 1;

  /**
   * The feature id for the '<em><b>Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__IDENTIFIER1 = 2;

  /**
   * The feature id for the '<em><b>Sign2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__SIGN2 = 3;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__IDENTIFIER2 = 4;

  /**
   * The feature id for the '<em><b>String</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__STRING = 5;

  /**
   * The feature id for the '<em><b>Constant Chr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT__CONSTANT_CHR = 6;

  /**
   * The number of structural features of the '<em>constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedNumberImpl <em>unsigned Number</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unsignedNumberImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedNumber()
   * @generated
   */
  int UNSIGNED_NUMBER = 12;

  /**
   * The feature id for the '<em><b>Unsigned Integer</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_NUMBER__UNSIGNED_INTEGER = 0;

  /**
   * The feature id for the '<em><b>Unsigned Real</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_NUMBER__UNSIGNED_REAL = 1;

  /**
   * The number of structural features of the '<em>unsigned Number</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_NUMBER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedIntegerImpl <em>unsigned Integer</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unsignedIntegerImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedInteger()
   * @generated
   */
  int UNSIGNED_INTEGER = 13;

  /**
   * The feature id for the '<em><b>Unsigned Integer</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_INTEGER__UNSIGNED_INTEGER = 0;

  /**
   * The number of structural features of the '<em>unsigned Integer</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_INTEGER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedRealImpl <em>unsigned Real</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unsignedRealImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedReal()
   * @generated
   */
  int UNSIGNED_REAL = 14;

  /**
   * The feature id for the '<em><b>Unsigned Real</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_REAL__UNSIGNED_REAL = 0;

  /**
   * The number of structural features of the '<em>unsigned Real</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_REAL_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.signImpl <em>sign</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.signImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsign()
   * @generated
   */
  int SIGN = 15;

  /**
   * The feature id for the '<em><b>Sign</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGN__SIGN = 0;

  /**
   * The number of structural features of the '<em>sign</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGN_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.boolImpl <em>bool</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.boolImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getbool()
   * @generated
   */
  int BOOL = 16;

  /**
   * The feature id for the '<em><b>Unsigned Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__UNSIGNED_NUMBER = CONSTANT__UNSIGNED_NUMBER;

  /**
   * The feature id for the '<em><b>Sign1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__SIGN1 = CONSTANT__SIGN1;

  /**
   * The feature id for the '<em><b>Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__IDENTIFIER1 = CONSTANT__IDENTIFIER1;

  /**
   * The feature id for the '<em><b>Sign2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__SIGN2 = CONSTANT__SIGN2;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__IDENTIFIER2 = CONSTANT__IDENTIFIER2;

  /**
   * The feature id for the '<em><b>String</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__STRING = CONSTANT__STRING;

  /**
   * The feature id for the '<em><b>Constant Chr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__CONSTANT_CHR = CONSTANT__CONSTANT_CHR;

  /**
   * The feature id for the '<em><b>Bool</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL__BOOL = CONSTANT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>bool</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOL_FEATURE_COUNT = CONSTANT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.StringStartImpl <em>String Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.StringStartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getStringStart()
   * @generated
   */
  int STRING_START = 17;

  /**
   * The feature id for the '<em><b>String Start</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_START__STRING_START = 0;

  /**
   * The number of structural features of the '<em>String Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_START_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.typeDefinitionPartImpl <em>type Definition Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.typeDefinitionPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeDefinitionPart()
   * @generated
   */
  int TYPE_DEFINITION_PART = 18;

  /**
   * The feature id for the '<em><b>Type Definition</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART__TYPE_DEFINITION = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART__SEMI_TERMINAL = 1;

  /**
   * The number of structural features of the '<em>type Definition Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_PART_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.typeDefinitionImpl <em>type Definition</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.typeDefinitionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeDefinition()
   * @generated
   */
  int TYPE_DEFINITION = 19;

  /**
   * The feature id for the '<em><b>ID1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__ID1 = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION__TYPE = 1;

  /**
   * The number of structural features of the '<em>type Definition</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_DEFINITION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.functionTypeImpl <em>function Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.functionTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionType()
   * @generated
   */
  int FUNCTION_TYPE = 20;

  /**
   * The feature id for the '<em><b>Formal Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_TYPE__FORMAL_PARAMETER_LIST = 0;

  /**
   * The feature id for the '<em><b>Result Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_TYPE__RESULT_TYPE = 1;

  /**
   * The number of structural features of the '<em>function Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.procedureTypeImpl <em>procedure Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.procedureTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureType()
   * @generated
   */
  int PROCEDURE_TYPE = 21;

  /**
   * The feature id for the '<em><b>Formal Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_TYPE__FORMAL_PARAMETER_LIST = 0;

  /**
   * The number of structural features of the '<em>procedure Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.typeStartImpl <em>type Start</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.typeStartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeStart()
   * @generated
   */
  int TYPE_START = 22;

  /**
   * The feature id for the '<em><b>Type Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_START__TYPE_START = 0;

  /**
   * The number of structural features of the '<em>type Start</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_START_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.simpleTypeImpl <em>simple Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.simpleTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleType()
   * @generated
   */
  int SIMPLE_TYPE = 23;

  /**
   * The feature id for the '<em><b>Simple Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE__SIMPLE_TYPE = 0;

  /**
   * The number of structural features of the '<em>simple Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.scalarTypeImpl <em>scalar Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.scalarTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getscalarType()
   * @generated
   */
  int SCALAR_TYPE = 24;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALAR_TYPE__IDENTIFIER_LIST = 0;

  /**
   * The number of structural features of the '<em>scalar Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SCALAR_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.subrangeTypeImpl <em>subrange Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.subrangeTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsubrangeType()
   * @generated
   */
  int SUBRANGE_TYPE = 25;

  /**
   * The feature id for the '<em><b>Constant1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__CONSTANT1 = 0;

  /**
   * The feature id for the '<em><b>Constan2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE__CONSTAN2 = 1;

  /**
   * The number of structural features of the '<em>subrange Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBRANGE_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.typeIdentifierImpl <em>type Identifier</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.typeIdentifierImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeIdentifier()
   * @generated
   */
  int TYPE_IDENTIFIER = 26;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_IDENTIFIER__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_IDENTIFIER__TYPE = 1;

  /**
   * The number of structural features of the '<em>type Identifier</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TYPE_IDENTIFIER_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.structuredTypeImpl <em>structured Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.structuredTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstructuredType()
   * @generated
   */
  int STRUCTURED_TYPE = 27;

  /**
   * The feature id for the '<em><b>Unpacked Structured Type1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE1 = 0;

  /**
   * The feature id for the '<em><b>Unpacked Structured Type2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE2 = 1;

  /**
   * The number of structural features of the '<em>structured Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unpackedStructuredTypeImpl <em>unpacked Structured Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unpackedStructuredTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunpackedStructuredType()
   * @generated
   */
  int UNPACKED_STRUCTURED_TYPE = 28;

  /**
   * The feature id for the '<em><b>Unpacked Structured Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE = 0;

  /**
   * The number of structural features of the '<em>unpacked Structured Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNPACKED_STRUCTURED_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.stringtypeImpl <em>stringtype</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.stringtypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstringtype()
   * @generated
   */
  int STRINGTYPE = 29;

  /**
   * The feature id for the '<em><b>String Terminal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGTYPE__STRING_TERMINAL = 0;

  /**
   * The feature id for the '<em><b>ID</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGTYPE__ID = 1;

  /**
   * The feature id for the '<em><b>Unsigned Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGTYPE__UNSIGNED_NUMBER = 2;

  /**
   * The number of structural features of the '<em>stringtype</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRINGTYPE_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.recordTypeImpl <em>record Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.recordTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordType()
   * @generated
   */
  int RECORD_TYPE = 30;

  /**
   * The feature id for the '<em><b>Field List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE__FIELD_LIST = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE__SEMI_TERMINAL = 1;

  /**
   * The number of structural features of the '<em>record Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_TYPE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl <em>field List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.fieldListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfieldList()
   * @generated
   */
  int FIELD_LIST = 31;

  /**
   * The feature id for the '<em><b>Fixed Part</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__FIXED_PART = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__SEMI_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Variant Part1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__VARIANT_PART1 = 2;

  /**
   * The feature id for the '<em><b>Variant Part2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST__VARIANT_PART2 = 3;

  /**
   * The number of structural features of the '<em>field List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIELD_LIST_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.fixedPartImpl <em>fixed Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.fixedPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfixedPart()
   * @generated
   */
  int FIXED_PART = 32;

  /**
   * The number of structural features of the '<em>fixed Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FIXED_PART_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.recordSectionImpl <em>record Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.recordSectionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordSection()
   * @generated
   */
  int RECORD_SECTION = 33;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__SEMI_TERMINAL = FIXED_PART_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Record Section</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__RECORD_SECTION = FIXED_PART_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__IDENTIFIER_LIST = FIXED_PART_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Type Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION__TYPE_START = FIXED_PART_FEATURE_COUNT + 3;

  /**
   * The number of structural features of the '<em>record Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_SECTION_FEATURE_COUNT = FIXED_PART_FEATURE_COUNT + 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.variantPartImpl <em>variant Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.variantPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariantPart()
   * @generated
   */
  int VARIANT_PART = 34;

  /**
   * The feature id for the '<em><b>Tag</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__TAG = 0;

  /**
   * The feature id for the '<em><b>Variant1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__VARIANT1 = 1;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__SEMI_TERMINAL = 2;

  /**
   * The feature id for the '<em><b>Variant2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART__VARIANT2 = 3;

  /**
   * The number of structural features of the '<em>variant Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_PART_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.tagImpl <em>tag</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.tagImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettag()
   * @generated
   */
  int TAG = 35;

  /**
   * The feature id for the '<em><b>ID</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG__ID = 0;

  /**
   * The feature id for the '<em><b>Type Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG__TYPE_IDENTIFIER1 = 1;

  /**
   * The feature id for the '<em><b>Type Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG__TYPE_IDENTIFIER2 = 2;

  /**
   * The number of structural features of the '<em>tag</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TAG_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.variantImpl <em>variant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.variantImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariant()
   * @generated
   */
  int VARIANT = 36;

  /**
   * The feature id for the '<em><b>Const List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT__CONST_LIST = 0;

  /**
   * The feature id for the '<em><b>Field List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT__FIELD_LIST = 1;

  /**
   * The number of structural features of the '<em>variant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIANT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.pointerTypeImpl <em>pointer Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.pointerTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getpointerType()
   * @generated
   */
  int POINTER_TYPE = 37;

  /**
   * The feature id for the '<em><b>Type Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE__TYPE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>pointer Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POINTER_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.variableDeclarationPartImpl <em>variable Declaration Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.variableDeclarationPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariableDeclarationPart()
   * @generated
   */
  int VARIABLE_DECLARATION_PART = 38;

  /**
   * The feature id for the '<em><b>Variable Declaration1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION1 = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART__SEMI_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Variable Declaration2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION2 = 2;

  /**
   * The number of structural features of the '<em>variable Declaration Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_PART_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.variableDeclarationImpl <em>variable Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.variableDeclarationImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariableDeclaration()
   * @generated
   */
  int VARIABLE_DECLARATION = 39;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Type Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION__TYPE_START = 1;

  /**
   * The number of structural features of the '<em>variable Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.procedureAndFunctionDeclarationPartImpl <em>procedure And Function Declaration Part</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.procedureAndFunctionDeclarationPartImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureAndFunctionDeclarationPart()
   * @generated
   */
  int PROCEDURE_AND_FUNCTION_DECLARATION_PART = 40;

  /**
   * The feature id for the '<em><b>Procedure Or Function Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_AND_FUNCTION_DECLARATION_PART__PROCEDURE_OR_FUNCTION_DECLARATION = 0;

  /**
   * The number of structural features of the '<em>procedure And Function Declaration Part</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_AND_FUNCTION_DECLARATION_PART_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.procedureOrFunctionDeclarationImpl <em>procedure Or Function Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.procedureOrFunctionDeclarationImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureOrFunctionDeclaration()
   * @generated
   */
  int PROCEDURE_OR_FUNCTION_DECLARATION = 41;

  /**
   * The feature id for the '<em><b>Procedure Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_OR_FUNCTION_DECLARATION__PROCEDURE_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Function Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_OR_FUNCTION_DECLARATION__FUNCTION_DECLARATION = 1;

  /**
   * The number of structural features of the '<em>procedure Or Function Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_OR_FUNCTION_DECLARATION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.procedureDeclarationImpl <em>procedure Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.procedureDeclarationImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureDeclaration()
   * @generated
   */
  int PROCEDURE_DECLARATION = 42;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Formal Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION__FORMAL_PARAMETER_LIST = 1;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION__BLOCK = 2;

  /**
   * The number of structural features of the '<em>procedure Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_DECLARATION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.formalParameterListImpl <em>formal Parameter List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.formalParameterListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getformalParameterList()
   * @generated
   */
  int FORMAL_PARAMETER_LIST = 43;

  /**
   * The feature id for the '<em><b>Formal Parameter Section1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION1 = 0;

  /**
   * The feature id for the '<em><b>Semiterminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST__SEMITERMINAL = 1;

  /**
   * The feature id for the '<em><b>Formal Parameter Section2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2 = 2;

  /**
   * The number of structural features of the '<em>formal Parameter List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_LIST_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.formalParameterSectionImpl <em>formal Parameter Section</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.formalParameterSectionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getformalParameterSection()
   * @generated
   */
  int FORMAL_PARAMETER_SECTION = 44;

  /**
   * The feature id for the '<em><b>Parameter Group</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION__PARAMETER_GROUP = 0;

  /**
   * The number of structural features of the '<em>formal Parameter Section</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FORMAL_PARAMETER_SECTION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.parameterGroupImpl <em>parameter Group</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.parameterGroupImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getparameterGroup()
   * @generated
   */
  int PARAMETER_GROUP = 45;

  /**
   * The feature id for the '<em><b>Identifier List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_GROUP__IDENTIFIER_LIST = 0;

  /**
   * The feature id for the '<em><b>Type Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_GROUP__TYPE_IDENTIFIER = 1;

  /**
   * The number of structural features of the '<em>parameter Group</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_GROUP_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.identifierListImpl <em>identifier List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.identifierListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getidentifierList()
   * @generated
   */
  int IDENTIFIER_LIST = 46;

  /**
   * The feature id for the '<em><b>Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST__IDENTIFIER1 = 0;

  /**
   * The feature id for the '<em><b>Comma Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST__COMMA_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST__IDENTIFIER2 = 2;

  /**
   * The number of structural features of the '<em>identifier List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IDENTIFIER_LIST_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.constListImpl <em>const List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.constListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstList()
   * @generated
   */
  int CONST_LIST = 47;

  /**
   * The feature id for the '<em><b>Constant1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_LIST__CONSTANT1 = 0;

  /**
   * The feature id for the '<em><b>Comma Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_LIST__COMMA_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Constant2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_LIST__CONSTANT2 = 2;

  /**
   * The number of structural features of the '<em>const List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONST_LIST_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.functionDeclarationImpl <em>function Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.functionDeclarationImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionDeclaration()
   * @generated
   */
  int FUNCTION_DECLARATION = 48;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Formal Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__FORMAL_PARAMETER_LIST = 1;

  /**
   * The feature id for the '<em><b>Result Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__RESULT_TYPE = 2;

  /**
   * The feature id for the '<em><b>Block</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION__BLOCK = 3;

  /**
   * The number of structural features of the '<em>function Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DECLARATION_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.resultTypeImpl <em>result Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.resultTypeImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getresultType()
   * @generated
   */
  int RESULT_TYPE = 49;

  /**
   * The feature id for the '<em><b>Type Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT_TYPE__TYPE_IDENTIFIER = 0;

  /**
   * The number of structural features of the '<em>result Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.statementImpl <em>statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.statementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstatement()
   * @generated
   */
  int STATEMENT = 50;

  /**
   * The feature id for the '<em><b>Label Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__LABEL_START = 0;

  /**
   * The feature id for the '<em><b>Unlabelled Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT__UNLABELLED_STATEMENT = 1;

  /**
   * The number of structural features of the '<em>statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unlabelledStatementImpl <em>unlabelled Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unlabelledStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunlabelledStatement()
   * @generated
   */
  int UNLABELLED_STATEMENT = 51;

  /**
   * The feature id for the '<em><b>Simple Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLABELLED_STATEMENT__SIMPLE_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Structured Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLABELLED_STATEMENT__STRUCTURED_STATEMENT = 1;

  /**
   * The number of structural features of the '<em>unlabelled Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNLABELLED_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.simpleStatementImpl <em>simple Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.simpleStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleStatement()
   * @generated
   */
  int SIMPLE_STATEMENT = 52;

  /**
   * The feature id for the '<em><b>Assignment Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__ASSIGNMENT_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Procedure Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__PROCEDURE_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>Goto Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT__GOTO_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>simple Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.assignmentStatementImpl <em>assignment Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.assignmentStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getassignmentStatement()
   * @generated
   */
  int ASSIGNMENT_STATEMENT = 53;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT__EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>assignment Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ASSIGNMENT_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.variableImpl <em>variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.variableImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariable()
   * @generated
   */
  int VARIABLE = 54;

  /**
   * The feature id for the '<em><b>Identifier1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__IDENTIFIER1 = 0;

  /**
   * The feature id for the '<em><b>Identifier2</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__IDENTIFIER2 = 1;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__EXPRESSION = 2;

  /**
   * The feature id for the '<em><b>Identifier3</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__IDENTIFIER3 = 3;

  /**
   * The number of structural features of the '<em>variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.expressionImpl <em>expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.expressionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getexpression()
   * @generated
   */
  int EXPRESSION = 55;

  /**
   * The feature id for the '<em><b>Simple Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__SIMPLE_EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.simpleExpressionImpl <em>simple Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.simpleExpressionImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleExpression()
   * @generated
   */
  int SIMPLE_EXPRESSION = 56;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__TERM = 0;

  /**
   * The feature id for the '<em><b>Simple Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION__SIMPLE_EXPRESSION = 1;

  /**
   * The number of structural features of the '<em>simple Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIMPLE_EXPRESSION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.termImpl <em>term</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.termImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getterm()
   * @generated
   */
  int TERM = 57;

  /**
   * The feature id for the '<em><b>Signed Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__SIGNED_FACTOR = 0;

  /**
   * The feature id for the '<em><b>Term</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM__TERM = 1;

  /**
   * The number of structural features of the '<em>term</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TERM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.signedFactorImpl <em>signed Factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.signedFactorImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsignedFactor()
   * @generated
   */
  int SIGNED_FACTOR = 58;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNED_FACTOR__FACTOR = 0;

  /**
   * The number of structural features of the '<em>signed Factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SIGNED_FACTOR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.factorImpl <em>factor</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.factorImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfactor()
   * @generated
   */
  int FACTOR = 59;

  /**
   * The feature id for the '<em><b>Variable</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__VARIABLE = 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__EXPRESSION = 1;

  /**
   * The feature id for the '<em><b>Function Designator</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FUNCTION_DESIGNATOR = 2;

  /**
   * The feature id for the '<em><b>Unsigned Constant</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__UNSIGNED_CONSTANT = 3;

  /**
   * The feature id for the '<em><b>Not</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__NOT = 4;

  /**
   * The feature id for the '<em><b>Factor</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__FACTOR = 5;

  /**
   * The feature id for the '<em><b>Bool</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR__BOOL = 6;

  /**
   * The number of structural features of the '<em>factor</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FACTOR_FEATURE_COUNT = 7;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl <em>unsigned Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedConstant()
   * @generated
   */
  int UNSIGNED_CONSTANT = 60;

  /**
   * The feature id for the '<em><b>Unsigned Number</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_CONSTANT__UNSIGNED_NUMBER = 0;

  /**
   * The feature id for the '<em><b>Constant Chr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_CONSTANT__CONSTANT_CHR = 1;

  /**
   * The feature id for the '<em><b>String Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_CONSTANT__STRING_START = 2;

  /**
   * The feature id for the '<em><b>Nil</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_CONSTANT__NIL = 3;

  /**
   * The number of structural features of the '<em>unsigned Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNSIGNED_CONSTANT_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.functionDesignatorImpl <em>function Designator</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.functionDesignatorImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionDesignator()
   * @generated
   */
  int FUNCTION_DESIGNATOR = 61;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR__PARAMETER_LIST = 1;

  /**
   * The number of structural features of the '<em>function Designator</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_DESIGNATOR_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.parameterListImpl <em>parameter List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.parameterListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getparameterList()
   * @generated
   */
  int PARAMETER_LIST = 62;

  /**
   * The feature id for the '<em><b>Actual Parameter1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_LIST__ACTUAL_PARAMETER1 = 0;

  /**
   * The feature id for the '<em><b>Actual Parameter2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_LIST__ACTUAL_PARAMETER2 = 1;

  /**
   * The number of structural features of the '<em>parameter List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PARAMETER_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.procedureStatementImpl <em>procedure Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.procedureStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureStatement()
   * @generated
   */
  int PROCEDURE_STATEMENT = 63;

  /**
   * The feature id for the '<em><b>Identifier</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT__IDENTIFIER = 0;

  /**
   * The feature id for the '<em><b>Parameter List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT__PARAMETER_LIST = 1;

  /**
   * The number of structural features of the '<em>procedure Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.actualParameterImpl <em>actual Parameter</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.actualParameterImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getactualParameter()
   * @generated
   */
  int ACTUAL_PARAMETER = 64;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>actual Parameter</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ACTUAL_PARAMETER_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.gotoStatementImpl <em>goto Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.gotoStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getgotoStatement()
   * @generated
   */
  int GOTO_STATEMENT = 65;

  /**
   * The feature id for the '<em><b>Label Start</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOTO_STATEMENT__LABEL_START = 0;

  /**
   * The number of structural features of the '<em>goto Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int GOTO_STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.structuredStatementImpl <em>structured Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.structuredStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstructuredStatement()
   * @generated
   */
  int STRUCTURED_STATEMENT = 66;

  /**
   * The feature id for the '<em><b>Compound Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__COMPOUND_STATEMENT = 0;

  /**
   * The feature id for the '<em><b>Repetetive Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__REPETETIVE_STATEMENT = 1;

  /**
   * The feature id for the '<em><b>With Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT__WITH_STATEMENT = 2;

  /**
   * The number of structural features of the '<em>structured Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRUCTURED_STATEMENT_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.compoundStatementImpl <em>compound Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.compoundStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getcompoundStatement()
   * @generated
   */
  int COMPOUND_STATEMENT = 67;

  /**
   * The feature id for the '<em><b>Statements</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_STATEMENT__STATEMENTS = 0;

  /**
   * The number of structural features of the '<em>compound Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMPOUND_STATEMENT_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.statementsImpl <em>statements</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.statementsImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstatements()
   * @generated
   */
  int STATEMENTS = 68;

  /**
   * The feature id for the '<em><b>Statement1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENTS__STATEMENT1 = 0;

  /**
   * The feature id for the '<em><b>Semi Terminal1</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENTS__SEMI_TERMINAL1 = 1;

  /**
   * The feature id for the '<em><b>Statement2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENTS__STATEMENT2 = 2;

  /**
   * The feature id for the '<em><b>Semi Terminal2</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENTS__SEMI_TERMINAL2 = 3;

  /**
   * The number of structural features of the '<em>statements</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STATEMENTS_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.repetetiveStatementImpl <em>repetetive Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.repetetiveStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrepetetiveStatement()
   * @generated
   */
  int REPETETIVE_STATEMENT = 69;

  /**
   * The number of structural features of the '<em>repetetive Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPETETIVE_STATEMENT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.repeatStatementImpl <em>repeat Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.repeatStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrepeatStatement()
   * @generated
   */
  int REPEAT_STATEMENT = 70;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__STATEMENT = REPETETIVE_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__EXPRESSION = REPETETIVE_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>repeat Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT_FEATURE_COUNT = REPETETIVE_STATEMENT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.withStatementImpl <em>with Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.withStatementImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getwithStatement()
   * @generated
   */
  int WITH_STATEMENT = 71;

  /**
   * The feature id for the '<em><b>Record Variable List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT__RECORD_VARIABLE_LIST = 0;

  /**
   * The feature id for the '<em><b>Statement</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT__STATEMENT = 1;

  /**
   * The number of structural features of the '<em>with Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WITH_STATEMENT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.example.mydsl.pascal.impl.recordVariableListImpl <em>record Variable List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.example.mydsl.pascal.impl.recordVariableListImpl
   * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordVariableList()
   * @generated
   */
  int RECORD_VARIABLE_LIST = 72;

  /**
   * The feature id for the '<em><b>Variable1</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_VARIABLE_LIST__VARIABLE1 = 0;

  /**
   * The feature id for the '<em><b>Comma Terminal</b></em>' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_VARIABLE_LIST__COMMA_TERMINAL = 1;

  /**
   * The feature id for the '<em><b>Variable2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_VARIABLE_LIST__VARIABLE2 = 2;

  /**
   * The number of structural features of the '<em>record Variable List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RECORD_VARIABLE_LIST_FEATURE_COUNT = 3;


  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.toBegin <em>to Begin</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>to Begin</em>'.
   * @see org.xtext.example.mydsl.pascal.toBegin
   * @generated
   */
  EClass gettoBegin();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.toBegin#getElements <em>Elements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Elements</em>'.
   * @see org.xtext.example.mydsl.pascal.toBegin#getElements()
   * @see #gettoBegin()
   * @generated
   */
  EReference gettoBegin_Elements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.programStart <em>program Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program Start</em>'.
   * @see org.xtext.example.mydsl.pascal.programStart
   * @generated
   */
  EClass getprogramStart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.programStart#getProgramHeading <em>Program Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Program Heading</em>'.
   * @see org.xtext.example.mydsl.pascal.programStart#getProgramHeading()
   * @see #getprogramStart()
   * @generated
   */
  EReference getprogramStart_ProgramHeading();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.programStart#getInterface <em>Interface</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Interface</em>'.
   * @see org.xtext.example.mydsl.pascal.programStart#getInterface()
   * @see #getprogramStart()
   * @generated
   */
  EAttribute getprogramStart_Interface();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.programStart#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.mydsl.pascal.programStart#getBlock()
   * @see #getprogramStart()
   * @generated
   */
  EReference getprogramStart_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.programHeading <em>program Heading</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>program Heading</em>'.
   * @see org.xtext.example.mydsl.pascal.programHeading
   * @generated
   */
  EClass getprogramHeading();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.programHeading#getIdentifier1 <em>Identifier1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier1</em>'.
   * @see org.xtext.example.mydsl.pascal.programHeading#getIdentifier1()
   * @see #getprogramHeading()
   * @generated
   */
  EReference getprogramHeading_Identifier1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.programHeading#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.programHeading#getIdentifierList()
   * @see #getprogramHeading()
   * @generated
   */
  EReference getprogramHeading_IdentifierList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.programHeading#getIdentifier2 <em>Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier2</em>'.
   * @see org.xtext.example.mydsl.pascal.programHeading#getIdentifier2()
   * @see #getprogramHeading()
   * @generated
   */
  EReference getprogramHeading_Identifier2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.identifier <em>identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.identifier
   * @generated
   */
  EClass getidentifier();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.identifier#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.identifier#getIdentifier()
   * @see #getidentifier()
   * @generated
   */
  EAttribute getidentifier_Identifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.block <em>block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>block</em>'.
   * @see org.xtext.example.mydsl.pascal.block
   * @generated
   */
  EClass getblock();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getLabelDeclarationPart <em>Label Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Label Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getLabelDeclarationPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_LabelDeclarationPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getConstantDefinitionPart <em>Constant Definition Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constant Definition Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getConstantDefinitionPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_ConstantDefinitionPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getTypeDefinitionPart <em>Type Definition Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type Definition Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getTypeDefinitionPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_TypeDefinitionPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getVariableDeclarationPart <em>Variable Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variable Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getVariableDeclarationPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_VariableDeclarationPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getProcedureAndFunctionDeclarationPart <em>Procedure And Function Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Procedure And Function Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getProcedureAndFunctionDeclarationPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_ProcedureAndFunctionDeclarationPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.block#getUsesUnitsPart <em>Uses Units Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Uses Units Part</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getUsesUnitsPart()
   * @see #getblock()
   * @generated
   */
  EReference getblock_UsesUnitsPart();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.block#getImplemeTerminal <em>Impleme Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Impleme Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getImplemeTerminal()
   * @see #getblock()
   * @generated
   */
  EAttribute getblock_ImplemeTerminal();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.block#getCompoundStatement <em>Compound Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Compound Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.block#getCompoundStatement()
   * @see #getblock()
   * @generated
   */
  EReference getblock_CompoundStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.usesUnitsPart <em>uses Units Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>uses Units Part</em>'.
   * @see org.xtext.example.mydsl.pascal.usesUnitsPart
   * @generated
   */
  EClass getusesUnitsPart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.usesUnitsPart#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.usesUnitsPart#getIdentifierList()
   * @see #getusesUnitsPart()
   * @generated
   */
  EReference getusesUnitsPart_IdentifierList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.labelDeclarationPart <em>label Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.labelDeclarationPart
   * @generated
   */
  EClass getlabelDeclarationPart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.labelDeclarationPart#getLabelStart1 <em>Label Start1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label Start1</em>'.
   * @see org.xtext.example.mydsl.pascal.labelDeclarationPart#getLabelStart1()
   * @see #getlabelDeclarationPart()
   * @generated
   */
  EReference getlabelDeclarationPart_LabelStart1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.labelDeclarationPart#getCommaTerminal <em>Comma Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Comma Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.labelDeclarationPart#getCommaTerminal()
   * @see #getlabelDeclarationPart()
   * @generated
   */
  EAttribute getlabelDeclarationPart_CommaTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.labelDeclarationPart#getLabelStart2 <em>Label Start2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Label Start2</em>'.
   * @see org.xtext.example.mydsl.pascal.labelDeclarationPart#getLabelStart2()
   * @see #getlabelDeclarationPart()
   * @generated
   */
  EReference getlabelDeclarationPart_LabelStart2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.labelStart <em>label Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>label Start</em>'.
   * @see org.xtext.example.mydsl.pascal.labelStart
   * @generated
   */
  EClass getlabelStart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.labelStart#getUnsignedInteger <em>Unsigned Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Integer</em>'.
   * @see org.xtext.example.mydsl.pascal.labelStart#getUnsignedInteger()
   * @see #getlabelStart()
   * @generated
   */
  EReference getlabelStart_UnsignedInteger();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.constantDefinitionPart <em>constant Definition Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant Definition Part</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinitionPart
   * @generated
   */
  EClass getconstantDefinitionPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.constantDefinitionPart#getConstantDefinition <em>Constant Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constant Definition</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinitionPart#getConstantDefinition()
   * @see #getconstantDefinitionPart()
   * @generated
   */
  EReference getconstantDefinitionPart_ConstantDefinition();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.constantDefinitionPart#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinitionPart#getSemiTerminal()
   * @see #getconstantDefinitionPart()
   * @generated
   */
  EAttribute getconstantDefinitionPart_SemiTerminal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.constantDefinition <em>constant Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant Definition</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinition
   * @generated
   */
  EClass getconstantDefinition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constantDefinition#getID <em>ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ID</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinition#getID()
   * @see #getconstantDefinition()
   * @generated
   */
  EReference getconstantDefinition_ID();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constantDefinition#getConstant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant</em>'.
   * @see org.xtext.example.mydsl.pascal.constantDefinition#getConstant()
   * @see #getconstantDefinition()
   * @generated
   */
  EReference getconstantDefinition_Constant();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.constantChr <em>constant Chr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant Chr</em>'.
   * @see org.xtext.example.mydsl.pascal.constantChr
   * @generated
   */
  EClass getconstantChr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constantChr#getUnsignedInteger <em>Unsigned Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Integer</em>'.
   * @see org.xtext.example.mydsl.pascal.constantChr#getUnsignedInteger()
   * @see #getconstantChr()
   * @generated
   */
  EReference getconstantChr_UnsignedInteger();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.constant <em>constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>constant</em>'.
   * @see org.xtext.example.mydsl.pascal.constant
   * @generated
   */
  EClass getconstant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getUnsignedNumber <em>Unsigned Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Number</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getUnsignedNumber()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_UnsignedNumber();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getSign1 <em>Sign1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sign1</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getSign1()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Sign1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getIdentifier1 <em>Identifier1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier1</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getIdentifier1()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Identifier1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getSign2 <em>Sign2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Sign2</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getSign2()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Sign2();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getIdentifier2 <em>Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier2</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getIdentifier2()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_Identifier2();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getString <em>String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>String</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getString()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_String();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constant#getConstantChr <em>Constant Chr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant Chr</em>'.
   * @see org.xtext.example.mydsl.pascal.constant#getConstantChr()
   * @see #getconstant()
   * @generated
   */
  EReference getconstant_ConstantChr();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unsignedNumber <em>unsigned Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unsigned Number</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedNumber
   * @generated
   */
  EClass getunsignedNumber();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unsignedNumber#getUnsignedInteger <em>Unsigned Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Integer</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedNumber#getUnsignedInteger()
   * @see #getunsignedNumber()
   * @generated
   */
  EReference getunsignedNumber_UnsignedInteger();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unsignedNumber#getUnsignedReal <em>Unsigned Real</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Real</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedNumber#getUnsignedReal()
   * @see #getunsignedNumber()
   * @generated
   */
  EReference getunsignedNumber_UnsignedReal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unsignedInteger <em>unsigned Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unsigned Integer</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedInteger
   * @generated
   */
  EClass getunsignedInteger();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.unsignedInteger#getUnsignedInteger <em>Unsigned Integer</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Unsigned Integer</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedInteger#getUnsignedInteger()
   * @see #getunsignedInteger()
   * @generated
   */
  EAttribute getunsignedInteger_UnsignedInteger();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unsignedReal <em>unsigned Real</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unsigned Real</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedReal
   * @generated
   */
  EClass getunsignedReal();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.unsignedReal#getUnsignedReal <em>Unsigned Real</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Unsigned Real</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedReal#getUnsignedReal()
   * @see #getunsignedReal()
   * @generated
   */
  EAttribute getunsignedReal_UnsignedReal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.sign <em>sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>sign</em>'.
   * @see org.xtext.example.mydsl.pascal.sign
   * @generated
   */
  EClass getsign();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.sign#getSign <em>Sign</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Sign</em>'.
   * @see org.xtext.example.mydsl.pascal.sign#getSign()
   * @see #getsign()
   * @generated
   */
  EAttribute getsign_Sign();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.bool <em>bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>bool</em>'.
   * @see org.xtext.example.mydsl.pascal.bool
   * @generated
   */
  EClass getbool();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.bool#getBool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Bool</em>'.
   * @see org.xtext.example.mydsl.pascal.bool#getBool()
   * @see #getbool()
   * @generated
   */
  EAttribute getbool_Bool();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.StringStart <em>String Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Start</em>'.
   * @see org.xtext.example.mydsl.pascal.StringStart
   * @generated
   */
  EClass getStringStart();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.StringStart#getStringStart <em>String Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String Start</em>'.
   * @see org.xtext.example.mydsl.pascal.StringStart#getStringStart()
   * @see #getStringStart()
   * @generated
   */
  EAttribute getStringStart_StringStart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.typeDefinitionPart <em>type Definition Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type Definition Part</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinitionPart
   * @generated
   */
  EClass gettypeDefinitionPart();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.typeDefinitionPart#getTypeDefinition <em>Type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Type Definition</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinitionPart#getTypeDefinition()
   * @see #gettypeDefinitionPart()
   * @generated
   */
  EReference gettypeDefinitionPart_TypeDefinition();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.typeDefinitionPart#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinitionPart#getSemiTerminal()
   * @see #gettypeDefinitionPart()
   * @generated
   */
  EAttribute gettypeDefinitionPart_SemiTerminal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.typeDefinition <em>type Definition</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type Definition</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinition
   * @generated
   */
  EClass gettypeDefinition();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.typeDefinition#getID1 <em>ID1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ID1</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinition#getID1()
   * @see #gettypeDefinition()
   * @generated
   */
  EReference gettypeDefinition_ID1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.typeDefinition#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.xtext.example.mydsl.pascal.typeDefinition#getType()
   * @see #gettypeDefinition()
   * @generated
   */
  EReference gettypeDefinition_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.functionType <em>function Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function Type</em>'.
   * @see org.xtext.example.mydsl.pascal.functionType
   * @generated
   */
  EClass getfunctionType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionType#getFormalParameterList <em>Formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.functionType#getFormalParameterList()
   * @see #getfunctionType()
   * @generated
   */
  EReference getfunctionType_FormalParameterList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionType#getResultType <em>Result Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Result Type</em>'.
   * @see org.xtext.example.mydsl.pascal.functionType#getResultType()
   * @see #getfunctionType()
   * @generated
   */
  EReference getfunctionType_ResultType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.procedureType <em>procedure Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure Type</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureType
   * @generated
   */
  EClass getprocedureType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureType#getFormalParameterList <em>Formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureType#getFormalParameterList()
   * @see #getprocedureType()
   * @generated
   */
  EReference getprocedureType_FormalParameterList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.typeStart <em>type Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type Start</em>'.
   * @see org.xtext.example.mydsl.pascal.typeStart
   * @generated
   */
  EClass gettypeStart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.typeStart#getTypeStart <em>Type Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Start</em>'.
   * @see org.xtext.example.mydsl.pascal.typeStart#getTypeStart()
   * @see #gettypeStart()
   * @generated
   */
  EReference gettypeStart_TypeStart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.simpleType <em>simple Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple Type</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleType
   * @generated
   */
  EClass getsimpleType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleType#getSimpleType <em>Simple Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple Type</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleType#getSimpleType()
   * @see #getsimpleType()
   * @generated
   */
  EReference getsimpleType_SimpleType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.scalarType <em>scalar Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>scalar Type</em>'.
   * @see org.xtext.example.mydsl.pascal.scalarType
   * @generated
   */
  EClass getscalarType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.scalarType#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.scalarType#getIdentifierList()
   * @see #getscalarType()
   * @generated
   */
  EReference getscalarType_IdentifierList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.subrangeType <em>subrange Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>subrange Type</em>'.
   * @see org.xtext.example.mydsl.pascal.subrangeType
   * @generated
   */
  EClass getsubrangeType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.subrangeType#getConstant1 <em>Constant1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant1</em>'.
   * @see org.xtext.example.mydsl.pascal.subrangeType#getConstant1()
   * @see #getsubrangeType()
   * @generated
   */
  EReference getsubrangeType_Constant1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.subrangeType#getConstan2 <em>Constan2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constan2</em>'.
   * @see org.xtext.example.mydsl.pascal.subrangeType#getConstan2()
   * @see #getsubrangeType()
   * @generated
   */
  EReference getsubrangeType_Constan2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.typeIdentifier <em>type Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>type Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.typeIdentifier
   * @generated
   */
  EClass gettypeIdentifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.typeIdentifier#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.typeIdentifier#getIdentifier()
   * @see #gettypeIdentifier()
   * @generated
   */
  EReference gettypeIdentifier_Identifier();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.typeIdentifier#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type</em>'.
   * @see org.xtext.example.mydsl.pascal.typeIdentifier#getType()
   * @see #gettypeIdentifier()
   * @generated
   */
  EAttribute gettypeIdentifier_Type();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.structuredType <em>structured Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>structured Type</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredType
   * @generated
   */
  EClass getstructuredType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.structuredType#getUnpackedStructuredType1 <em>Unpacked Structured Type1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unpacked Structured Type1</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredType#getUnpackedStructuredType1()
   * @see #getstructuredType()
   * @generated
   */
  EReference getstructuredType_UnpackedStructuredType1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.structuredType#getUnpackedStructuredType2 <em>Unpacked Structured Type2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unpacked Structured Type2</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredType#getUnpackedStructuredType2()
   * @see #getstructuredType()
   * @generated
   */
  EReference getstructuredType_UnpackedStructuredType2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unpackedStructuredType <em>unpacked Structured Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unpacked Structured Type</em>'.
   * @see org.xtext.example.mydsl.pascal.unpackedStructuredType
   * @generated
   */
  EClass getunpackedStructuredType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unpackedStructuredType#getUnpackedStructuredType <em>Unpacked Structured Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unpacked Structured Type</em>'.
   * @see org.xtext.example.mydsl.pascal.unpackedStructuredType#getUnpackedStructuredType()
   * @see #getunpackedStructuredType()
   * @generated
   */
  EReference getunpackedStructuredType_UnpackedStructuredType();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.stringtype <em>stringtype</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>stringtype</em>'.
   * @see org.xtext.example.mydsl.pascal.stringtype
   * @generated
   */
  EClass getstringtype();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.stringtype#getStringTerminal <em>String Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>String Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.stringtype#getStringTerminal()
   * @see #getstringtype()
   * @generated
   */
  EAttribute getstringtype_StringTerminal();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.stringtype#getID <em>ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ID</em>'.
   * @see org.xtext.example.mydsl.pascal.stringtype#getID()
   * @see #getstringtype()
   * @generated
   */
  EReference getstringtype_ID();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.stringtype#getUnsignedNumber <em>Unsigned Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Number</em>'.
   * @see org.xtext.example.mydsl.pascal.stringtype#getUnsignedNumber()
   * @see #getstringtype()
   * @generated
   */
  EReference getstringtype_UnsignedNumber();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.recordType <em>record Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>record Type</em>'.
   * @see org.xtext.example.mydsl.pascal.recordType
   * @generated
   */
  EClass getrecordType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.recordType#getFieldList <em>Field List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field List</em>'.
   * @see org.xtext.example.mydsl.pascal.recordType#getFieldList()
   * @see #getrecordType()
   * @generated
   */
  EReference getrecordType_FieldList();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.recordType#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.recordType#getSemiTerminal()
   * @see #getrecordType()
   * @generated
   */
  EAttribute getrecordType_SemiTerminal();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.fieldList <em>field List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>field List</em>'.
   * @see org.xtext.example.mydsl.pascal.fieldList
   * @generated
   */
  EClass getfieldList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.fieldList#getFixedPart <em>Fixed Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Fixed Part</em>'.
   * @see org.xtext.example.mydsl.pascal.fieldList#getFixedPart()
   * @see #getfieldList()
   * @generated
   */
  EReference getfieldList_FixedPart();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.fieldList#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.fieldList#getSemiTerminal()
   * @see #getfieldList()
   * @generated
   */
  EAttribute getfieldList_SemiTerminal();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.fieldList#getVariantPart1 <em>Variant Part1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variant Part1</em>'.
   * @see org.xtext.example.mydsl.pascal.fieldList#getVariantPart1()
   * @see #getfieldList()
   * @generated
   */
  EReference getfieldList_VariantPart1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.fieldList#getVariantPart2 <em>Variant Part2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variant Part2</em>'.
   * @see org.xtext.example.mydsl.pascal.fieldList#getVariantPart2()
   * @see #getfieldList()
   * @generated
   */
  EReference getfieldList_VariantPart2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.fixedPart <em>fixed Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>fixed Part</em>'.
   * @see org.xtext.example.mydsl.pascal.fixedPart
   * @generated
   */
  EClass getfixedPart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.recordSection <em>record Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>record Section</em>'.
   * @see org.xtext.example.mydsl.pascal.recordSection
   * @generated
   */
  EClass getrecordSection();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.recordSection#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.recordSection#getSemiTerminal()
   * @see #getrecordSection()
   * @generated
   */
  EAttribute getrecordSection_SemiTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.recordSection#getRecordSection <em>Record Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Record Section</em>'.
   * @see org.xtext.example.mydsl.pascal.recordSection#getRecordSection()
   * @see #getrecordSection()
   * @generated
   */
  EReference getrecordSection_RecordSection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.recordSection#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.recordSection#getIdentifierList()
   * @see #getrecordSection()
   * @generated
   */
  EReference getrecordSection_IdentifierList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.recordSection#getTypeStart <em>Type Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Start</em>'.
   * @see org.xtext.example.mydsl.pascal.recordSection#getTypeStart()
   * @see #getrecordSection()
   * @generated
   */
  EReference getrecordSection_TypeStart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.variantPart <em>variant Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variant Part</em>'.
   * @see org.xtext.example.mydsl.pascal.variantPart
   * @generated
   */
  EClass getvariantPart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variantPart#getTag <em>Tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Tag</em>'.
   * @see org.xtext.example.mydsl.pascal.variantPart#getTag()
   * @see #getvariantPart()
   * @generated
   */
  EReference getvariantPart_Tag();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variantPart#getVariant1 <em>Variant1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variant1</em>'.
   * @see org.xtext.example.mydsl.pascal.variantPart#getVariant1()
   * @see #getvariantPart()
   * @generated
   */
  EReference getvariantPart_Variant1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.variantPart#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.variantPart#getSemiTerminal()
   * @see #getvariantPart()
   * @generated
   */
  EAttribute getvariantPart_SemiTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.variantPart#getVariant2 <em>Variant2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variant2</em>'.
   * @see org.xtext.example.mydsl.pascal.variantPart#getVariant2()
   * @see #getvariantPart()
   * @generated
   */
  EReference getvariantPart_Variant2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.tag <em>tag</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>tag</em>'.
   * @see org.xtext.example.mydsl.pascal.tag
   * @generated
   */
  EClass gettag();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.tag#getID <em>ID</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>ID</em>'.
   * @see org.xtext.example.mydsl.pascal.tag#getID()
   * @see #gettag()
   * @generated
   */
  EReference gettag_ID();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.tag#getTypeIdentifier1 <em>Type Identifier1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Identifier1</em>'.
   * @see org.xtext.example.mydsl.pascal.tag#getTypeIdentifier1()
   * @see #gettag()
   * @generated
   */
  EReference gettag_TypeIdentifier1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.tag#getTypeIdentifier2 <em>Type Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Identifier2</em>'.
   * @see org.xtext.example.mydsl.pascal.tag#getTypeIdentifier2()
   * @see #gettag()
   * @generated
   */
  EReference gettag_TypeIdentifier2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.variant <em>variant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variant</em>'.
   * @see org.xtext.example.mydsl.pascal.variant
   * @generated
   */
  EClass getvariant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variant#getConstList <em>Const List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Const List</em>'.
   * @see org.xtext.example.mydsl.pascal.variant#getConstList()
   * @see #getvariant()
   * @generated
   */
  EReference getvariant_ConstList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variant#getFieldList <em>Field List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Field List</em>'.
   * @see org.xtext.example.mydsl.pascal.variant#getFieldList()
   * @see #getvariant()
   * @generated
   */
  EReference getvariant_FieldList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.pointerType <em>pointer Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>pointer Type</em>'.
   * @see org.xtext.example.mydsl.pascal.pointerType
   * @generated
   */
  EClass getpointerType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.pointerType#getTypeIdentifier <em>Type Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.pointerType#getTypeIdentifier()
   * @see #getpointerType()
   * @generated
   */
  EReference getpointerType_TypeIdentifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.variableDeclarationPart <em>variable Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclarationPart
   * @generated
   */
  EClass getvariableDeclarationPart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variableDeclarationPart#getVariableDeclaration1 <em>Variable Declaration1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable Declaration1</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclarationPart#getVariableDeclaration1()
   * @see #getvariableDeclarationPart()
   * @generated
   */
  EReference getvariableDeclarationPart_VariableDeclaration1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.variableDeclarationPart#getSemiTerminal <em>Semi Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclarationPart#getSemiTerminal()
   * @see #getvariableDeclarationPart()
   * @generated
   */
  EAttribute getvariableDeclarationPart_SemiTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.variableDeclarationPart#getVariableDeclaration2 <em>Variable Declaration2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variable Declaration2</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclarationPart#getVariableDeclaration2()
   * @see #getvariableDeclarationPart()
   * @generated
   */
  EReference getvariableDeclarationPart_VariableDeclaration2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.variableDeclaration <em>variable Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclaration
   * @generated
   */
  EClass getvariableDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variableDeclaration#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclaration#getIdentifierList()
   * @see #getvariableDeclaration()
   * @generated
   */
  EReference getvariableDeclaration_IdentifierList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variableDeclaration#getTypeStart <em>Type Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Start</em>'.
   * @see org.xtext.example.mydsl.pascal.variableDeclaration#getTypeStart()
   * @see #getvariableDeclaration()
   * @generated
   */
  EReference getvariableDeclaration_TypeStart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.procedureAndFunctionDeclarationPart <em>procedure And Function Declaration Part</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure And Function Declaration Part</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureAndFunctionDeclarationPart
   * @generated
   */
  EClass getprocedureAndFunctionDeclarationPart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureAndFunctionDeclarationPart#getProcedureOrFunctionDeclaration <em>Procedure Or Function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure Or Function Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureAndFunctionDeclarationPart#getProcedureOrFunctionDeclaration()
   * @see #getprocedureAndFunctionDeclarationPart()
   * @generated
   */
  EReference getprocedureAndFunctionDeclarationPart_ProcedureOrFunctionDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration <em>procedure Or Function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure Or Function Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration
   * @generated
   */
  EClass getprocedureOrFunctionDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration#getProcedureDeclaration <em>Procedure Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration#getProcedureDeclaration()
   * @see #getprocedureOrFunctionDeclaration()
   * @generated
   */
  EReference getprocedureOrFunctionDeclaration_ProcedureDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration#getFunctionDeclaration <em>Function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureOrFunctionDeclaration#getFunctionDeclaration()
   * @see #getprocedureOrFunctionDeclaration()
   * @generated
   */
  EReference getprocedureOrFunctionDeclaration_FunctionDeclaration();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.procedureDeclaration <em>procedure Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureDeclaration
   * @generated
   */
  EClass getprocedureDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureDeclaration#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureDeclaration#getIdentifier()
   * @see #getprocedureDeclaration()
   * @generated
   */
  EReference getprocedureDeclaration_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureDeclaration#getFormalParameterList <em>Formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureDeclaration#getFormalParameterList()
   * @see #getprocedureDeclaration()
   * @generated
   */
  EReference getprocedureDeclaration_FormalParameterList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureDeclaration#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureDeclaration#getBlock()
   * @see #getprocedureDeclaration()
   * @generated
   */
  EReference getprocedureDeclaration_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.formalParameterList <em>formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterList
   * @generated
   */
  EClass getformalParameterList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.formalParameterList#getFormalParameterSection1 <em>Formal Parameter Section1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Parameter Section1</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterList#getFormalParameterSection1()
   * @see #getformalParameterList()
   * @generated
   */
  EReference getformalParameterList_FormalParameterSection1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.formalParameterList#getSemiterminal <em>Semiterminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semiterminal</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterList#getSemiterminal()
   * @see #getformalParameterList()
   * @generated
   */
  EAttribute getformalParameterList_Semiterminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.formalParameterList#getFormalParameterSection2 <em>Formal Parameter Section2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Formal Parameter Section2</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterList#getFormalParameterSection2()
   * @see #getformalParameterList()
   * @generated
   */
  EReference getformalParameterList_FormalParameterSection2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.formalParameterSection <em>formal Parameter Section</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>formal Parameter Section</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterSection
   * @generated
   */
  EClass getformalParameterSection();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.formalParameterSection#getParameterGroup <em>Parameter Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter Group</em>'.
   * @see org.xtext.example.mydsl.pascal.formalParameterSection#getParameterGroup()
   * @see #getformalParameterSection()
   * @generated
   */
  EReference getformalParameterSection_ParameterGroup();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.parameterGroup <em>parameter Group</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>parameter Group</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterGroup
   * @generated
   */
  EClass getparameterGroup();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.parameterGroup#getIdentifierList <em>Identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterGroup#getIdentifierList()
   * @see #getparameterGroup()
   * @generated
   */
  EReference getparameterGroup_IdentifierList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.parameterGroup#getTypeIdentifier <em>Type Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterGroup#getTypeIdentifier()
   * @see #getparameterGroup()
   * @generated
   */
  EReference getparameterGroup_TypeIdentifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.identifierList <em>identifier List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>identifier List</em>'.
   * @see org.xtext.example.mydsl.pascal.identifierList
   * @generated
   */
  EClass getidentifierList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.identifierList#getIdentifier1 <em>Identifier1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier1</em>'.
   * @see org.xtext.example.mydsl.pascal.identifierList#getIdentifier1()
   * @see #getidentifierList()
   * @generated
   */
  EReference getidentifierList_Identifier1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.identifierList#getCommaTerminal <em>Comma Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Comma Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.identifierList#getCommaTerminal()
   * @see #getidentifierList()
   * @generated
   */
  EAttribute getidentifierList_CommaTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.identifierList#getIdentifier2 <em>Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Identifier2</em>'.
   * @see org.xtext.example.mydsl.pascal.identifierList#getIdentifier2()
   * @see #getidentifierList()
   * @generated
   */
  EReference getidentifierList_Identifier2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.constList <em>const List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>const List</em>'.
   * @see org.xtext.example.mydsl.pascal.constList
   * @generated
   */
  EClass getconstList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.constList#getConstant1 <em>Constant1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant1</em>'.
   * @see org.xtext.example.mydsl.pascal.constList#getConstant1()
   * @see #getconstList()
   * @generated
   */
  EReference getconstList_Constant1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.constList#getCommaTerminal <em>Comma Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Comma Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.constList#getCommaTerminal()
   * @see #getconstList()
   * @generated
   */
  EAttribute getconstList_CommaTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.constList#getConstant2 <em>Constant2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Constant2</em>'.
   * @see org.xtext.example.mydsl.pascal.constList#getConstant2()
   * @see #getconstList()
   * @generated
   */
  EReference getconstList_Constant2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.functionDeclaration <em>function Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function Declaration</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDeclaration
   * @generated
   */
  EClass getfunctionDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDeclaration#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDeclaration#getIdentifier()
   * @see #getfunctionDeclaration()
   * @generated
   */
  EReference getfunctionDeclaration_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDeclaration#getFormalParameterList <em>Formal Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Formal Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDeclaration#getFormalParameterList()
   * @see #getfunctionDeclaration()
   * @generated
   */
  EReference getfunctionDeclaration_FormalParameterList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDeclaration#getResultType <em>Result Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Result Type</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDeclaration#getResultType()
   * @see #getfunctionDeclaration()
   * @generated
   */
  EReference getfunctionDeclaration_ResultType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDeclaration#getBlock <em>Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Block</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDeclaration#getBlock()
   * @see #getfunctionDeclaration()
   * @generated
   */
  EReference getfunctionDeclaration_Block();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.resultType <em>result Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>result Type</em>'.
   * @see org.xtext.example.mydsl.pascal.resultType
   * @generated
   */
  EClass getresultType();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.resultType#getTypeIdentifier <em>Type Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.resultType#getTypeIdentifier()
   * @see #getresultType()
   * @generated
   */
  EReference getresultType_TypeIdentifier();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.statement <em>statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statement</em>'.
   * @see org.xtext.example.mydsl.pascal.statement
   * @generated
   */
  EClass getstatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.statement#getLabelStart <em>Label Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label Start</em>'.
   * @see org.xtext.example.mydsl.pascal.statement#getLabelStart()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_LabelStart();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.statement#getUnlabelledStatement <em>Unlabelled Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unlabelled Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.statement#getUnlabelledStatement()
   * @see #getstatement()
   * @generated
   */
  EReference getstatement_UnlabelledStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unlabelledStatement <em>unlabelled Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unlabelled Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.unlabelledStatement
   * @generated
   */
  EClass getunlabelledStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unlabelledStatement#getSimpleStatement <em>Simple Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.unlabelledStatement#getSimpleStatement()
   * @see #getunlabelledStatement()
   * @generated
   */
  EReference getunlabelledStatement_SimpleStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unlabelledStatement#getStructuredStatement <em>Structured Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Structured Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.unlabelledStatement#getStructuredStatement()
   * @see #getunlabelledStatement()
   * @generated
   */
  EReference getunlabelledStatement_StructuredStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.simpleStatement <em>simple Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleStatement
   * @generated
   */
  EClass getsimpleStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleStatement#getAssignmentStatement <em>Assignment Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Assignment Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleStatement#getAssignmentStatement()
   * @see #getsimpleStatement()
   * @generated
   */
  EReference getsimpleStatement_AssignmentStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleStatement#getProcedureStatement <em>Procedure Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleStatement#getProcedureStatement()
   * @see #getsimpleStatement()
   * @generated
   */
  EReference getsimpleStatement_ProcedureStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleStatement#getGotoStatement <em>Goto Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Goto Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleStatement#getGotoStatement()
   * @see #getsimpleStatement()
   * @generated
   */
  EReference getsimpleStatement_GotoStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.assignmentStatement <em>assignment Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>assignment Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.assignmentStatement
   * @generated
   */
  EClass getassignmentStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.assignmentStatement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.pascal.assignmentStatement#getVariable()
   * @see #getassignmentStatement()
   * @generated
   */
  EReference getassignmentStatement_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.assignmentStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.assignmentStatement#getExpression()
   * @see #getassignmentStatement()
   * @generated
   */
  EReference getassignmentStatement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.variable <em>variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>variable</em>'.
   * @see org.xtext.example.mydsl.pascal.variable
   * @generated
   */
  EClass getvariable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variable#getIdentifier1 <em>Identifier1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier1</em>'.
   * @see org.xtext.example.mydsl.pascal.variable#getIdentifier1()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Identifier1();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.variable#getIdentifier2 <em>Identifier2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier2</em>'.
   * @see org.xtext.example.mydsl.pascal.variable#getIdentifier2()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Identifier2();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.variable#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.variable#getExpression()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Expression();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.variable#getIdentifier3 <em>Identifier3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Identifier3</em>'.
   * @see org.xtext.example.mydsl.pascal.variable#getIdentifier3()
   * @see #getvariable()
   * @generated
   */
  EReference getvariable_Identifier3();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.expression <em>expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>expression</em>'.
   * @see org.xtext.example.mydsl.pascal.expression
   * @generated
   */
  EClass getexpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.expression#getSimpleExpression <em>Simple Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.expression#getSimpleExpression()
   * @see #getexpression()
   * @generated
   */
  EReference getexpression_SimpleExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.simpleExpression <em>simple Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>simple Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleExpression
   * @generated
   */
  EClass getsimpleExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleExpression#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleExpression#getTerm()
   * @see #getsimpleExpression()
   * @generated
   */
  EReference getsimpleExpression_Term();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.simpleExpression#getSimpleExpression <em>Simple Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Simple Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.simpleExpression#getSimpleExpression()
   * @see #getsimpleExpression()
   * @generated
   */
  EReference getsimpleExpression_SimpleExpression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.term <em>term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>term</em>'.
   * @see org.xtext.example.mydsl.pascal.term
   * @generated
   */
  EClass getterm();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.term#getSignedFactor <em>Signed Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Signed Factor</em>'.
   * @see org.xtext.example.mydsl.pascal.term#getSignedFactor()
   * @see #getterm()
   * @generated
   */
  EReference getterm_SignedFactor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.term#getTerm <em>Term</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Term</em>'.
   * @see org.xtext.example.mydsl.pascal.term#getTerm()
   * @see #getterm()
   * @generated
   */
  EReference getterm_Term();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.signedFactor <em>signed Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>signed Factor</em>'.
   * @see org.xtext.example.mydsl.pascal.signedFactor
   * @generated
   */
  EClass getsignedFactor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.signedFactor#getFactor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Factor</em>'.
   * @see org.xtext.example.mydsl.pascal.signedFactor#getFactor()
   * @see #getsignedFactor()
   * @generated
   */
  EReference getsignedFactor_Factor();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.factor <em>factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>factor</em>'.
   * @see org.xtext.example.mydsl.pascal.factor
   * @generated
   */
  EClass getfactor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getVariable()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Variable();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getExpression()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getFunctionDesignator <em>Function Designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Designator</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getFunctionDesignator()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_FunctionDesignator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getUnsignedConstant <em>Unsigned Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Constant</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getUnsignedConstant()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_UnsignedConstant();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.factor#getNot <em>Not</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Not</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getNot()
   * @see #getfactor()
   * @generated
   */
  EAttribute getfactor_Not();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getFactor <em>Factor</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Factor</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getFactor()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Factor();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.factor#getBool <em>Bool</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Bool</em>'.
   * @see org.xtext.example.mydsl.pascal.factor#getBool()
   * @see #getfactor()
   * @generated
   */
  EReference getfactor_Bool();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.unsignedConstant <em>unsigned Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>unsigned Constant</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedConstant
   * @generated
   */
  EClass getunsignedConstant();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unsignedConstant#getUnsignedNumber <em>Unsigned Number</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Unsigned Number</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedConstant#getUnsignedNumber()
   * @see #getunsignedConstant()
   * @generated
   */
  EReference getunsignedConstant_UnsignedNumber();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unsignedConstant#getConstantChr <em>Constant Chr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Constant Chr</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedConstant#getConstantChr()
   * @see #getunsignedConstant()
   * @generated
   */
  EReference getunsignedConstant_ConstantChr();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.unsignedConstant#getStringStart <em>String Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>String Start</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedConstant#getStringStart()
   * @see #getunsignedConstant()
   * @generated
   */
  EReference getunsignedConstant_StringStart();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.unsignedConstant#getNil <em>Nil</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Nil</em>'.
   * @see org.xtext.example.mydsl.pascal.unsignedConstant#getNil()
   * @see #getunsignedConstant()
   * @generated
   */
  EAttribute getunsignedConstant_Nil();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.functionDesignator <em>function Designator</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>function Designator</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDesignator
   * @generated
   */
  EClass getfunctionDesignator();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDesignator#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDesignator#getIdentifier()
   * @see #getfunctionDesignator()
   * @generated
   */
  EReference getfunctionDesignator_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.functionDesignator#getParameterList <em>Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.functionDesignator#getParameterList()
   * @see #getfunctionDesignator()
   * @generated
   */
  EReference getfunctionDesignator_ParameterList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.parameterList <em>parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterList
   * @generated
   */
  EClass getparameterList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.parameterList#getActualParameter1 <em>Actual Parameter1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Actual Parameter1</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterList#getActualParameter1()
   * @see #getparameterList()
   * @generated
   */
  EReference getparameterList_ActualParameter1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.parameterList#getActualParameter2 <em>Actual Parameter2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Actual Parameter2</em>'.
   * @see org.xtext.example.mydsl.pascal.parameterList#getActualParameter2()
   * @see #getparameterList()
   * @generated
   */
  EReference getparameterList_ActualParameter2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.procedureStatement <em>procedure Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>procedure Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureStatement
   * @generated
   */
  EClass getprocedureStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureStatement#getIdentifier <em>Identifier</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Identifier</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureStatement#getIdentifier()
   * @see #getprocedureStatement()
   * @generated
   */
  EReference getprocedureStatement_Identifier();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.procedureStatement#getParameterList <em>Parameter List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Parameter List</em>'.
   * @see org.xtext.example.mydsl.pascal.procedureStatement#getParameterList()
   * @see #getprocedureStatement()
   * @generated
   */
  EReference getprocedureStatement_ParameterList();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.actualParameter <em>actual Parameter</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>actual Parameter</em>'.
   * @see org.xtext.example.mydsl.pascal.actualParameter
   * @generated
   */
  EClass getactualParameter();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.actualParameter#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.actualParameter#getExpression()
   * @see #getactualParameter()
   * @generated
   */
  EReference getactualParameter_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.gotoStatement <em>goto Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>goto Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.gotoStatement
   * @generated
   */
  EClass getgotoStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.gotoStatement#getLabelStart <em>Label Start</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Label Start</em>'.
   * @see org.xtext.example.mydsl.pascal.gotoStatement#getLabelStart()
   * @see #getgotoStatement()
   * @generated
   */
  EReference getgotoStatement_LabelStart();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.structuredStatement <em>structured Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>structured Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredStatement
   * @generated
   */
  EClass getstructuredStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.structuredStatement#getCompoundStatement <em>Compound Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Compound Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredStatement#getCompoundStatement()
   * @see #getstructuredStatement()
   * @generated
   */
  EReference getstructuredStatement_CompoundStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.structuredStatement#getRepetetiveStatement <em>Repetetive Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Repetetive Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredStatement#getRepetetiveStatement()
   * @see #getstructuredStatement()
   * @generated
   */
  EReference getstructuredStatement_RepetetiveStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.structuredStatement#getWithStatement <em>With Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>With Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.structuredStatement#getWithStatement()
   * @see #getstructuredStatement()
   * @generated
   */
  EReference getstructuredStatement_WithStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.compoundStatement <em>compound Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>compound Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.compoundStatement
   * @generated
   */
  EClass getcompoundStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.compoundStatement#getStatements <em>Statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statements</em>'.
   * @see org.xtext.example.mydsl.pascal.compoundStatement#getStatements()
   * @see #getcompoundStatement()
   * @generated
   */
  EReference getcompoundStatement_Statements();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.statements <em>statements</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>statements</em>'.
   * @see org.xtext.example.mydsl.pascal.statements
   * @generated
   */
  EClass getstatements();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.statements#getStatement1 <em>Statement1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statement1</em>'.
   * @see org.xtext.example.mydsl.pascal.statements#getStatement1()
   * @see #getstatements()
   * @generated
   */
  EReference getstatements_Statement1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.statements#getSemiTerminal1 <em>Semi Terminal1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Semi Terminal1</em>'.
   * @see org.xtext.example.mydsl.pascal.statements#getSemiTerminal1()
   * @see #getstatements()
   * @generated
   */
  EAttribute getstatements_SemiTerminal1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.statements#getStatement2 <em>Statement2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Statement2</em>'.
   * @see org.xtext.example.mydsl.pascal.statements#getStatement2()
   * @see #getstatements()
   * @generated
   */
  EReference getstatements_Statement2();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.example.mydsl.pascal.statements#getSemiTerminal2 <em>Semi Terminal2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Semi Terminal2</em>'.
   * @see org.xtext.example.mydsl.pascal.statements#getSemiTerminal2()
   * @see #getstatements()
   * @generated
   */
  EAttribute getstatements_SemiTerminal2();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.repetetiveStatement <em>repetetive Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>repetetive Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.repetetiveStatement
   * @generated
   */
  EClass getrepetetiveStatement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.repeatStatement <em>repeat Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>repeat Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.repeatStatement
   * @generated
   */
  EClass getrepeatStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.repeatStatement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.repeatStatement#getStatement()
   * @see #getrepeatStatement()
   * @generated
   */
  EReference getrepeatStatement_Statement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.repeatStatement#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.xtext.example.mydsl.pascal.repeatStatement#getExpression()
   * @see #getrepeatStatement()
   * @generated
   */
  EReference getrepeatStatement_Expression();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.withStatement <em>with Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>with Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.withStatement
   * @generated
   */
  EClass getwithStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.withStatement#getRecordVariableList <em>Record Variable List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Record Variable List</em>'.
   * @see org.xtext.example.mydsl.pascal.withStatement#getRecordVariableList()
   * @see #getwithStatement()
   * @generated
   */
  EReference getwithStatement_RecordVariableList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.withStatement#getStatement <em>Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Statement</em>'.
   * @see org.xtext.example.mydsl.pascal.withStatement#getStatement()
   * @see #getwithStatement()
   * @generated
   */
  EReference getwithStatement_Statement();

  /**
   * Returns the meta object for class '{@link org.xtext.example.mydsl.pascal.recordVariableList <em>record Variable List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>record Variable List</em>'.
   * @see org.xtext.example.mydsl.pascal.recordVariableList
   * @generated
   */
  EClass getrecordVariableList();

  /**
   * Returns the meta object for the containment reference '{@link org.xtext.example.mydsl.pascal.recordVariableList#getVariable1 <em>Variable1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Variable1</em>'.
   * @see org.xtext.example.mydsl.pascal.recordVariableList#getVariable1()
   * @see #getrecordVariableList()
   * @generated
   */
  EReference getrecordVariableList_Variable1();

  /**
   * Returns the meta object for the attribute list '{@link org.xtext.example.mydsl.pascal.recordVariableList#getCommaTerminal <em>Comma Terminal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute list '<em>Comma Terminal</em>'.
   * @see org.xtext.example.mydsl.pascal.recordVariableList#getCommaTerminal()
   * @see #getrecordVariableList()
   * @generated
   */
  EAttribute getrecordVariableList_CommaTerminal();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.example.mydsl.pascal.recordVariableList#getVariable2 <em>Variable2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Variable2</em>'.
   * @see org.xtext.example.mydsl.pascal.recordVariableList#getVariable2()
   * @see #getrecordVariableList()
   * @generated
   */
  EReference getrecordVariableList_Variable2();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PascalFactory getPascalFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.toBeginImpl <em>to Begin</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.toBeginImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettoBegin()
     * @generated
     */
    EClass TO_BEGIN = eINSTANCE.gettoBegin();

    /**
     * The meta object literal for the '<em><b>Elements</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TO_BEGIN__ELEMENTS = eINSTANCE.gettoBegin_Elements();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.programStartImpl <em>program Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.programStartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprogramStart()
     * @generated
     */
    EClass PROGRAM_START = eINSTANCE.getprogramStart();

    /**
     * The meta object literal for the '<em><b>Program Heading</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_START__PROGRAM_HEADING = eINSTANCE.getprogramStart_ProgramHeading();

    /**
     * The meta object literal for the '<em><b>Interface</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROGRAM_START__INTERFACE = eINSTANCE.getprogramStart_Interface();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_START__BLOCK = eINSTANCE.getprogramStart_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.programHeadingImpl <em>program Heading</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.programHeadingImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprogramHeading()
     * @generated
     */
    EClass PROGRAM_HEADING = eINSTANCE.getprogramHeading();

    /**
     * The meta object literal for the '<em><b>Identifier1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_HEADING__IDENTIFIER1 = eINSTANCE.getprogramHeading_Identifier1();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_HEADING__IDENTIFIER_LIST = eINSTANCE.getprogramHeading_IdentifierList();

    /**
     * The meta object literal for the '<em><b>Identifier2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROGRAM_HEADING__IDENTIFIER2 = eINSTANCE.getprogramHeading_Identifier2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.identifierImpl <em>identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.identifierImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getidentifier()
     * @generated
     */
    EClass IDENTIFIER = eINSTANCE.getidentifier();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIER__IDENTIFIER = eINSTANCE.getidentifier_Identifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.blockImpl <em>block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.blockImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getblock()
     * @generated
     */
    EClass BLOCK = eINSTANCE.getblock();

    /**
     * The meta object literal for the '<em><b>Label Declaration Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__LABEL_DECLARATION_PART = eINSTANCE.getblock_LabelDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Constant Definition Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__CONSTANT_DEFINITION_PART = eINSTANCE.getblock_ConstantDefinitionPart();

    /**
     * The meta object literal for the '<em><b>Type Definition Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__TYPE_DEFINITION_PART = eINSTANCE.getblock_TypeDefinitionPart();

    /**
     * The meta object literal for the '<em><b>Variable Declaration Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__VARIABLE_DECLARATION_PART = eINSTANCE.getblock_VariableDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Procedure And Function Declaration Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__PROCEDURE_AND_FUNCTION_DECLARATION_PART = eINSTANCE.getblock_ProcedureAndFunctionDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Uses Units Part</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__USES_UNITS_PART = eINSTANCE.getblock_UsesUnitsPart();

    /**
     * The meta object literal for the '<em><b>Impleme Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BLOCK__IMPLEME_TERMINAL = eINSTANCE.getblock_ImplemeTerminal();

    /**
     * The meta object literal for the '<em><b>Compound Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK__COMPOUND_STATEMENT = eINSTANCE.getblock_CompoundStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.usesUnitsPartImpl <em>uses Units Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.usesUnitsPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getusesUnitsPart()
     * @generated
     */
    EClass USES_UNITS_PART = eINSTANCE.getusesUnitsPart();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference USES_UNITS_PART__IDENTIFIER_LIST = eINSTANCE.getusesUnitsPart_IdentifierList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.labelDeclarationPartImpl <em>label Declaration Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.labelDeclarationPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getlabelDeclarationPart()
     * @generated
     */
    EClass LABEL_DECLARATION_PART = eINSTANCE.getlabelDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Label Start1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_DECLARATION_PART__LABEL_START1 = eINSTANCE.getlabelDeclarationPart_LabelStart1();

    /**
     * The meta object literal for the '<em><b>Comma Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute LABEL_DECLARATION_PART__COMMA_TERMINAL = eINSTANCE.getlabelDeclarationPart_CommaTerminal();

    /**
     * The meta object literal for the '<em><b>Label Start2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_DECLARATION_PART__LABEL_START2 = eINSTANCE.getlabelDeclarationPart_LabelStart2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.labelStartImpl <em>label Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.labelStartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getlabelStart()
     * @generated
     */
    EClass LABEL_START = eINSTANCE.getlabelStart();

    /**
     * The meta object literal for the '<em><b>Unsigned Integer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference LABEL_START__UNSIGNED_INTEGER = eINSTANCE.getlabelStart_UnsignedInteger();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.constantDefinitionPartImpl <em>constant Definition Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.constantDefinitionPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantDefinitionPart()
     * @generated
     */
    EClass CONSTANT_DEFINITION_PART = eINSTANCE.getconstantDefinitionPart();

    /**
     * The meta object literal for the '<em><b>Constant Definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION_PART__CONSTANT_DEFINITION = eINSTANCE.getconstantDefinitionPart_ConstantDefinition();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONSTANT_DEFINITION_PART__SEMI_TERMINAL = eINSTANCE.getconstantDefinitionPart_SemiTerminal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.constantDefinitionImpl <em>constant Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.constantDefinitionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantDefinition()
     * @generated
     */
    EClass CONSTANT_DEFINITION = eINSTANCE.getconstantDefinition();

    /**
     * The meta object literal for the '<em><b>ID</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__ID = eINSTANCE.getconstantDefinition_ID();

    /**
     * The meta object literal for the '<em><b>Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_DEFINITION__CONSTANT = eINSTANCE.getconstantDefinition_Constant();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.constantChrImpl <em>constant Chr</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.constantChrImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstantChr()
     * @generated
     */
    EClass CONSTANT_CHR = eINSTANCE.getconstantChr();

    /**
     * The meta object literal for the '<em><b>Unsigned Integer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT_CHR__UNSIGNED_INTEGER = eINSTANCE.getconstantChr_UnsignedInteger();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.constantImpl <em>constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.constantImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getconstant();

    /**
     * The meta object literal for the '<em><b>Unsigned Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__UNSIGNED_NUMBER = eINSTANCE.getconstant_UnsignedNumber();

    /**
     * The meta object literal for the '<em><b>Sign1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__SIGN1 = eINSTANCE.getconstant_Sign1();

    /**
     * The meta object literal for the '<em><b>Identifier1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__IDENTIFIER1 = eINSTANCE.getconstant_Identifier1();

    /**
     * The meta object literal for the '<em><b>Sign2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__SIGN2 = eINSTANCE.getconstant_Sign2();

    /**
     * The meta object literal for the '<em><b>Identifier2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__IDENTIFIER2 = eINSTANCE.getconstant_Identifier2();

    /**
     * The meta object literal for the '<em><b>String</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__STRING = eINSTANCE.getconstant_String();

    /**
     * The meta object literal for the '<em><b>Constant Chr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONSTANT__CONSTANT_CHR = eINSTANCE.getconstant_ConstantChr();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedNumberImpl <em>unsigned Number</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unsignedNumberImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedNumber()
     * @generated
     */
    EClass UNSIGNED_NUMBER = eINSTANCE.getunsignedNumber();

    /**
     * The meta object literal for the '<em><b>Unsigned Integer</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNSIGNED_NUMBER__UNSIGNED_INTEGER = eINSTANCE.getunsignedNumber_UnsignedInteger();

    /**
     * The meta object literal for the '<em><b>Unsigned Real</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNSIGNED_NUMBER__UNSIGNED_REAL = eINSTANCE.getunsignedNumber_UnsignedReal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedIntegerImpl <em>unsigned Integer</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unsignedIntegerImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedInteger()
     * @generated
     */
    EClass UNSIGNED_INTEGER = eINSTANCE.getunsignedInteger();

    /**
     * The meta object literal for the '<em><b>Unsigned Integer</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNSIGNED_INTEGER__UNSIGNED_INTEGER = eINSTANCE.getunsignedInteger_UnsignedInteger();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedRealImpl <em>unsigned Real</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unsignedRealImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedReal()
     * @generated
     */
    EClass UNSIGNED_REAL = eINSTANCE.getunsignedReal();

    /**
     * The meta object literal for the '<em><b>Unsigned Real</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNSIGNED_REAL__UNSIGNED_REAL = eINSTANCE.getunsignedReal_UnsignedReal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.signImpl <em>sign</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.signImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsign()
     * @generated
     */
    EClass SIGN = eINSTANCE.getsign();

    /**
     * The meta object literal for the '<em><b>Sign</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SIGN__SIGN = eINSTANCE.getsign_Sign();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.boolImpl <em>bool</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.boolImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getbool()
     * @generated
     */
    EClass BOOL = eINSTANCE.getbool();

    /**
     * The meta object literal for the '<em><b>Bool</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BOOL__BOOL = eINSTANCE.getbool_Bool();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.StringStartImpl <em>String Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.StringStartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getStringStart()
     * @generated
     */
    EClass STRING_START = eINSTANCE.getStringStart();

    /**
     * The meta object literal for the '<em><b>String Start</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_START__STRING_START = eINSTANCE.getStringStart_StringStart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.typeDefinitionPartImpl <em>type Definition Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.typeDefinitionPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeDefinitionPart()
     * @generated
     */
    EClass TYPE_DEFINITION_PART = eINSTANCE.gettypeDefinitionPart();

    /**
     * The meta object literal for the '<em><b>Type Definition</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION_PART__TYPE_DEFINITION = eINSTANCE.gettypeDefinitionPart_TypeDefinition();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_DEFINITION_PART__SEMI_TERMINAL = eINSTANCE.gettypeDefinitionPart_SemiTerminal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.typeDefinitionImpl <em>type Definition</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.typeDefinitionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeDefinition()
     * @generated
     */
    EClass TYPE_DEFINITION = eINSTANCE.gettypeDefinition();

    /**
     * The meta object literal for the '<em><b>ID1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION__ID1 = eINSTANCE.gettypeDefinition_ID1();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_DEFINITION__TYPE = eINSTANCE.gettypeDefinition_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.functionTypeImpl <em>function Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.functionTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionType()
     * @generated
     */
    EClass FUNCTION_TYPE = eINSTANCE.getfunctionType();

    /**
     * The meta object literal for the '<em><b>Formal Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_TYPE__FORMAL_PARAMETER_LIST = eINSTANCE.getfunctionType_FormalParameterList();

    /**
     * The meta object literal for the '<em><b>Result Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_TYPE__RESULT_TYPE = eINSTANCE.getfunctionType_ResultType();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.procedureTypeImpl <em>procedure Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.procedureTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureType()
     * @generated
     */
    EClass PROCEDURE_TYPE = eINSTANCE.getprocedureType();

    /**
     * The meta object literal for the '<em><b>Formal Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_TYPE__FORMAL_PARAMETER_LIST = eINSTANCE.getprocedureType_FormalParameterList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.typeStartImpl <em>type Start</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.typeStartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeStart()
     * @generated
     */
    EClass TYPE_START = eINSTANCE.gettypeStart();

    /**
     * The meta object literal for the '<em><b>Type Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_START__TYPE_START = eINSTANCE.gettypeStart_TypeStart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.simpleTypeImpl <em>simple Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.simpleTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleType()
     * @generated
     */
    EClass SIMPLE_TYPE = eINSTANCE.getsimpleType();

    /**
     * The meta object literal for the '<em><b>Simple Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_TYPE__SIMPLE_TYPE = eINSTANCE.getsimpleType_SimpleType();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.scalarTypeImpl <em>scalar Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.scalarTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getscalarType()
     * @generated
     */
    EClass SCALAR_TYPE = eINSTANCE.getscalarType();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SCALAR_TYPE__IDENTIFIER_LIST = eINSTANCE.getscalarType_IdentifierList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.subrangeTypeImpl <em>subrange Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.subrangeTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsubrangeType()
     * @generated
     */
    EClass SUBRANGE_TYPE = eINSTANCE.getsubrangeType();

    /**
     * The meta object literal for the '<em><b>Constant1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__CONSTANT1 = eINSTANCE.getsubrangeType_Constant1();

    /**
     * The meta object literal for the '<em><b>Constan2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBRANGE_TYPE__CONSTAN2 = eINSTANCE.getsubrangeType_Constan2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.typeIdentifierImpl <em>type Identifier</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.typeIdentifierImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettypeIdentifier()
     * @generated
     */
    EClass TYPE_IDENTIFIER = eINSTANCE.gettypeIdentifier();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TYPE_IDENTIFIER__IDENTIFIER = eINSTANCE.gettypeIdentifier_Identifier();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TYPE_IDENTIFIER__TYPE = eINSTANCE.gettypeIdentifier_Type();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.structuredTypeImpl <em>structured Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.structuredTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstructuredType()
     * @generated
     */
    EClass STRUCTURED_TYPE = eINSTANCE.getstructuredType();

    /**
     * The meta object literal for the '<em><b>Unpacked Structured Type1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE1 = eINSTANCE.getstructuredType_UnpackedStructuredType1();

    /**
     * The meta object literal for the '<em><b>Unpacked Structured Type2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE2 = eINSTANCE.getstructuredType_UnpackedStructuredType2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unpackedStructuredTypeImpl <em>unpacked Structured Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unpackedStructuredTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunpackedStructuredType()
     * @generated
     */
    EClass UNPACKED_STRUCTURED_TYPE = eINSTANCE.getunpackedStructuredType();

    /**
     * The meta object literal for the '<em><b>Unpacked Structured Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNPACKED_STRUCTURED_TYPE__UNPACKED_STRUCTURED_TYPE = eINSTANCE.getunpackedStructuredType_UnpackedStructuredType();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.stringtypeImpl <em>stringtype</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.stringtypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstringtype()
     * @generated
     */
    EClass STRINGTYPE = eINSTANCE.getstringtype();

    /**
     * The meta object literal for the '<em><b>String Terminal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRINGTYPE__STRING_TERMINAL = eINSTANCE.getstringtype_StringTerminal();

    /**
     * The meta object literal for the '<em><b>ID</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRINGTYPE__ID = eINSTANCE.getstringtype_ID();

    /**
     * The meta object literal for the '<em><b>Unsigned Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRINGTYPE__UNSIGNED_NUMBER = eINSTANCE.getstringtype_UnsignedNumber();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.recordTypeImpl <em>record Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.recordTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordType()
     * @generated
     */
    EClass RECORD_TYPE = eINSTANCE.getrecordType();

    /**
     * The meta object literal for the '<em><b>Field List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_TYPE__FIELD_LIST = eINSTANCE.getrecordType_FieldList();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECORD_TYPE__SEMI_TERMINAL = eINSTANCE.getrecordType_SemiTerminal();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.fieldListImpl <em>field List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.fieldListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfieldList()
     * @generated
     */
    EClass FIELD_LIST = eINSTANCE.getfieldList();

    /**
     * The meta object literal for the '<em><b>Fixed Part</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_LIST__FIXED_PART = eINSTANCE.getfieldList_FixedPart();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FIELD_LIST__SEMI_TERMINAL = eINSTANCE.getfieldList_SemiTerminal();

    /**
     * The meta object literal for the '<em><b>Variant Part1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_LIST__VARIANT_PART1 = eINSTANCE.getfieldList_VariantPart1();

    /**
     * The meta object literal for the '<em><b>Variant Part2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FIELD_LIST__VARIANT_PART2 = eINSTANCE.getfieldList_VariantPart2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.fixedPartImpl <em>fixed Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.fixedPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfixedPart()
     * @generated
     */
    EClass FIXED_PART = eINSTANCE.getfixedPart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.recordSectionImpl <em>record Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.recordSectionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordSection()
     * @generated
     */
    EClass RECORD_SECTION = eINSTANCE.getrecordSection();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECORD_SECTION__SEMI_TERMINAL = eINSTANCE.getrecordSection_SemiTerminal();

    /**
     * The meta object literal for the '<em><b>Record Section</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_SECTION__RECORD_SECTION = eINSTANCE.getrecordSection_RecordSection();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_SECTION__IDENTIFIER_LIST = eINSTANCE.getrecordSection_IdentifierList();

    /**
     * The meta object literal for the '<em><b>Type Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_SECTION__TYPE_START = eINSTANCE.getrecordSection_TypeStart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.variantPartImpl <em>variant Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.variantPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariantPart()
     * @generated
     */
    EClass VARIANT_PART = eINSTANCE.getvariantPart();

    /**
     * The meta object literal for the '<em><b>Tag</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__TAG = eINSTANCE.getvariantPart_Tag();

    /**
     * The meta object literal for the '<em><b>Variant1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__VARIANT1 = eINSTANCE.getvariantPart_Variant1();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIANT_PART__SEMI_TERMINAL = eINSTANCE.getvariantPart_SemiTerminal();

    /**
     * The meta object literal for the '<em><b>Variant2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT_PART__VARIANT2 = eINSTANCE.getvariantPart_Variant2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.tagImpl <em>tag</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.tagImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#gettag()
     * @generated
     */
    EClass TAG = eINSTANCE.gettag();

    /**
     * The meta object literal for the '<em><b>ID</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TAG__ID = eINSTANCE.gettag_ID();

    /**
     * The meta object literal for the '<em><b>Type Identifier1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TAG__TYPE_IDENTIFIER1 = eINSTANCE.gettag_TypeIdentifier1();

    /**
     * The meta object literal for the '<em><b>Type Identifier2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TAG__TYPE_IDENTIFIER2 = eINSTANCE.gettag_TypeIdentifier2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.variantImpl <em>variant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.variantImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariant()
     * @generated
     */
    EClass VARIANT = eINSTANCE.getvariant();

    /**
     * The meta object literal for the '<em><b>Const List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT__CONST_LIST = eINSTANCE.getvariant_ConstList();

    /**
     * The meta object literal for the '<em><b>Field List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIANT__FIELD_LIST = eINSTANCE.getvariant_FieldList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.pointerTypeImpl <em>pointer Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.pointerTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getpointerType()
     * @generated
     */
    EClass POINTER_TYPE = eINSTANCE.getpointerType();

    /**
     * The meta object literal for the '<em><b>Type Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference POINTER_TYPE__TYPE_IDENTIFIER = eINSTANCE.getpointerType_TypeIdentifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.variableDeclarationPartImpl <em>variable Declaration Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.variableDeclarationPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariableDeclarationPart()
     * @generated
     */
    EClass VARIABLE_DECLARATION_PART = eINSTANCE.getvariableDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Variable Declaration1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION1 = eINSTANCE.getvariableDeclarationPart_VariableDeclaration1();

    /**
     * The meta object literal for the '<em><b>Semi Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VARIABLE_DECLARATION_PART__SEMI_TERMINAL = eINSTANCE.getvariableDeclarationPart_SemiTerminal();

    /**
     * The meta object literal for the '<em><b>Variable Declaration2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION_PART__VARIABLE_DECLARATION2 = eINSTANCE.getvariableDeclarationPart_VariableDeclaration2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.variableDeclarationImpl <em>variable Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.variableDeclarationImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariableDeclaration()
     * @generated
     */
    EClass VARIABLE_DECLARATION = eINSTANCE.getvariableDeclaration();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__IDENTIFIER_LIST = eINSTANCE.getvariableDeclaration_IdentifierList();

    /**
     * The meta object literal for the '<em><b>Type Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE_DECLARATION__TYPE_START = eINSTANCE.getvariableDeclaration_TypeStart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.procedureAndFunctionDeclarationPartImpl <em>procedure And Function Declaration Part</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.procedureAndFunctionDeclarationPartImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureAndFunctionDeclarationPart()
     * @generated
     */
    EClass PROCEDURE_AND_FUNCTION_DECLARATION_PART = eINSTANCE.getprocedureAndFunctionDeclarationPart();

    /**
     * The meta object literal for the '<em><b>Procedure Or Function Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_AND_FUNCTION_DECLARATION_PART__PROCEDURE_OR_FUNCTION_DECLARATION = eINSTANCE.getprocedureAndFunctionDeclarationPart_ProcedureOrFunctionDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.procedureOrFunctionDeclarationImpl <em>procedure Or Function Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.procedureOrFunctionDeclarationImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureOrFunctionDeclaration()
     * @generated
     */
    EClass PROCEDURE_OR_FUNCTION_DECLARATION = eINSTANCE.getprocedureOrFunctionDeclaration();

    /**
     * The meta object literal for the '<em><b>Procedure Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_OR_FUNCTION_DECLARATION__PROCEDURE_DECLARATION = eINSTANCE.getprocedureOrFunctionDeclaration_ProcedureDeclaration();

    /**
     * The meta object literal for the '<em><b>Function Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_OR_FUNCTION_DECLARATION__FUNCTION_DECLARATION = eINSTANCE.getprocedureOrFunctionDeclaration_FunctionDeclaration();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.procedureDeclarationImpl <em>procedure Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.procedureDeclarationImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureDeclaration()
     * @generated
     */
    EClass PROCEDURE_DECLARATION = eINSTANCE.getprocedureDeclaration();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_DECLARATION__IDENTIFIER = eINSTANCE.getprocedureDeclaration_Identifier();

    /**
     * The meta object literal for the '<em><b>Formal Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_DECLARATION__FORMAL_PARAMETER_LIST = eINSTANCE.getprocedureDeclaration_FormalParameterList();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_DECLARATION__BLOCK = eINSTANCE.getprocedureDeclaration_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.formalParameterListImpl <em>formal Parameter List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.formalParameterListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getformalParameterList()
     * @generated
     */
    EClass FORMAL_PARAMETER_LIST = eINSTANCE.getformalParameterList();

    /**
     * The meta object literal for the '<em><b>Formal Parameter Section1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION1 = eINSTANCE.getformalParameterList_FormalParameterSection1();

    /**
     * The meta object literal for the '<em><b>Semiterminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FORMAL_PARAMETER_LIST__SEMITERMINAL = eINSTANCE.getformalParameterList_Semiterminal();

    /**
     * The meta object literal for the '<em><b>Formal Parameter Section2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_LIST__FORMAL_PARAMETER_SECTION2 = eINSTANCE.getformalParameterList_FormalParameterSection2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.formalParameterSectionImpl <em>formal Parameter Section</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.formalParameterSectionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getformalParameterSection()
     * @generated
     */
    EClass FORMAL_PARAMETER_SECTION = eINSTANCE.getformalParameterSection();

    /**
     * The meta object literal for the '<em><b>Parameter Group</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FORMAL_PARAMETER_SECTION__PARAMETER_GROUP = eINSTANCE.getformalParameterSection_ParameterGroup();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.parameterGroupImpl <em>parameter Group</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.parameterGroupImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getparameterGroup()
     * @generated
     */
    EClass PARAMETER_GROUP = eINSTANCE.getparameterGroup();

    /**
     * The meta object literal for the '<em><b>Identifier List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_GROUP__IDENTIFIER_LIST = eINSTANCE.getparameterGroup_IdentifierList();

    /**
     * The meta object literal for the '<em><b>Type Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_GROUP__TYPE_IDENTIFIER = eINSTANCE.getparameterGroup_TypeIdentifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.identifierListImpl <em>identifier List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.identifierListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getidentifierList()
     * @generated
     */
    EClass IDENTIFIER_LIST = eINSTANCE.getidentifierList();

    /**
     * The meta object literal for the '<em><b>Identifier1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDENTIFIER_LIST__IDENTIFIER1 = eINSTANCE.getidentifierList_Identifier1();

    /**
     * The meta object literal for the '<em><b>Comma Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute IDENTIFIER_LIST__COMMA_TERMINAL = eINSTANCE.getidentifierList_CommaTerminal();

    /**
     * The meta object literal for the '<em><b>Identifier2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IDENTIFIER_LIST__IDENTIFIER2 = eINSTANCE.getidentifierList_Identifier2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.constListImpl <em>const List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.constListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getconstList()
     * @generated
     */
    EClass CONST_LIST = eINSTANCE.getconstList();

    /**
     * The meta object literal for the '<em><b>Constant1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONST_LIST__CONSTANT1 = eINSTANCE.getconstList_Constant1();

    /**
     * The meta object literal for the '<em><b>Comma Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONST_LIST__COMMA_TERMINAL = eINSTANCE.getconstList_CommaTerminal();

    /**
     * The meta object literal for the '<em><b>Constant2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONST_LIST__CONSTANT2 = eINSTANCE.getconstList_Constant2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.functionDeclarationImpl <em>function Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.functionDeclarationImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionDeclaration()
     * @generated
     */
    EClass FUNCTION_DECLARATION = eINSTANCE.getfunctionDeclaration();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__IDENTIFIER = eINSTANCE.getfunctionDeclaration_Identifier();

    /**
     * The meta object literal for the '<em><b>Formal Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__FORMAL_PARAMETER_LIST = eINSTANCE.getfunctionDeclaration_FormalParameterList();

    /**
     * The meta object literal for the '<em><b>Result Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__RESULT_TYPE = eINSTANCE.getfunctionDeclaration_ResultType();

    /**
     * The meta object literal for the '<em><b>Block</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DECLARATION__BLOCK = eINSTANCE.getfunctionDeclaration_Block();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.resultTypeImpl <em>result Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.resultTypeImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getresultType()
     * @generated
     */
    EClass RESULT_TYPE = eINSTANCE.getresultType();

    /**
     * The meta object literal for the '<em><b>Type Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESULT_TYPE__TYPE_IDENTIFIER = eINSTANCE.getresultType_TypeIdentifier();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.statementImpl <em>statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.statementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstatement()
     * @generated
     */
    EClass STATEMENT = eINSTANCE.getstatement();

    /**
     * The meta object literal for the '<em><b>Label Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__LABEL_START = eINSTANCE.getstatement_LabelStart();

    /**
     * The meta object literal for the '<em><b>Unlabelled Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENT__UNLABELLED_STATEMENT = eINSTANCE.getstatement_UnlabelledStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unlabelledStatementImpl <em>unlabelled Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unlabelledStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunlabelledStatement()
     * @generated
     */
    EClass UNLABELLED_STATEMENT = eINSTANCE.getunlabelledStatement();

    /**
     * The meta object literal for the '<em><b>Simple Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNLABELLED_STATEMENT__SIMPLE_STATEMENT = eINSTANCE.getunlabelledStatement_SimpleStatement();

    /**
     * The meta object literal for the '<em><b>Structured Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNLABELLED_STATEMENT__STRUCTURED_STATEMENT = eINSTANCE.getunlabelledStatement_StructuredStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.simpleStatementImpl <em>simple Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.simpleStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleStatement()
     * @generated
     */
    EClass SIMPLE_STATEMENT = eINSTANCE.getsimpleStatement();

    /**
     * The meta object literal for the '<em><b>Assignment Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__ASSIGNMENT_STATEMENT = eINSTANCE.getsimpleStatement_AssignmentStatement();

    /**
     * The meta object literal for the '<em><b>Procedure Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__PROCEDURE_STATEMENT = eINSTANCE.getsimpleStatement_ProcedureStatement();

    /**
     * The meta object literal for the '<em><b>Goto Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_STATEMENT__GOTO_STATEMENT = eINSTANCE.getsimpleStatement_GotoStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.assignmentStatementImpl <em>assignment Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.assignmentStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getassignmentStatement()
     * @generated
     */
    EClass ASSIGNMENT_STATEMENT = eINSTANCE.getassignmentStatement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__VARIABLE = eINSTANCE.getassignmentStatement_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ASSIGNMENT_STATEMENT__EXPRESSION = eINSTANCE.getassignmentStatement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.variableImpl <em>variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.variableImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getvariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getvariable();

    /**
     * The meta object literal for the '<em><b>Identifier1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__IDENTIFIER1 = eINSTANCE.getvariable_Identifier1();

    /**
     * The meta object literal for the '<em><b>Identifier2</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__IDENTIFIER2 = eINSTANCE.getvariable_Identifier2();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__EXPRESSION = eINSTANCE.getvariable_Expression();

    /**
     * The meta object literal for the '<em><b>Identifier3</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__IDENTIFIER3 = eINSTANCE.getvariable_Identifier3();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.expressionImpl <em>expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.expressionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getexpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getexpression();

    /**
     * The meta object literal for the '<em><b>Simple Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__SIMPLE_EXPRESSION = eINSTANCE.getexpression_SimpleExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.simpleExpressionImpl <em>simple Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.simpleExpressionImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsimpleExpression()
     * @generated
     */
    EClass SIMPLE_EXPRESSION = eINSTANCE.getsimpleExpression();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_EXPRESSION__TERM = eINSTANCE.getsimpleExpression_Term();

    /**
     * The meta object literal for the '<em><b>Simple Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIMPLE_EXPRESSION__SIMPLE_EXPRESSION = eINSTANCE.getsimpleExpression_SimpleExpression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.termImpl <em>term</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.termImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getterm()
     * @generated
     */
    EClass TERM = eINSTANCE.getterm();

    /**
     * The meta object literal for the '<em><b>Signed Factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__SIGNED_FACTOR = eINSTANCE.getterm_SignedFactor();

    /**
     * The meta object literal for the '<em><b>Term</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference TERM__TERM = eINSTANCE.getterm_Term();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.signedFactorImpl <em>signed Factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.signedFactorImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getsignedFactor()
     * @generated
     */
    EClass SIGNED_FACTOR = eINSTANCE.getsignedFactor();

    /**
     * The meta object literal for the '<em><b>Factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SIGNED_FACTOR__FACTOR = eINSTANCE.getsignedFactor_Factor();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.factorImpl <em>factor</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.factorImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfactor()
     * @generated
     */
    EClass FACTOR = eINSTANCE.getfactor();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__VARIABLE = eINSTANCE.getfactor_Variable();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__EXPRESSION = eINSTANCE.getfactor_Expression();

    /**
     * The meta object literal for the '<em><b>Function Designator</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__FUNCTION_DESIGNATOR = eINSTANCE.getfactor_FunctionDesignator();

    /**
     * The meta object literal for the '<em><b>Unsigned Constant</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__UNSIGNED_CONSTANT = eINSTANCE.getfactor_UnsignedConstant();

    /**
     * The meta object literal for the '<em><b>Not</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FACTOR__NOT = eINSTANCE.getfactor_Not();

    /**
     * The meta object literal for the '<em><b>Factor</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__FACTOR = eINSTANCE.getfactor_Factor();

    /**
     * The meta object literal for the '<em><b>Bool</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FACTOR__BOOL = eINSTANCE.getfactor_Bool();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl <em>unsigned Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getunsignedConstant()
     * @generated
     */
    EClass UNSIGNED_CONSTANT = eINSTANCE.getunsignedConstant();

    /**
     * The meta object literal for the '<em><b>Unsigned Number</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNSIGNED_CONSTANT__UNSIGNED_NUMBER = eINSTANCE.getunsignedConstant_UnsignedNumber();

    /**
     * The meta object literal for the '<em><b>Constant Chr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNSIGNED_CONSTANT__CONSTANT_CHR = eINSTANCE.getunsignedConstant_ConstantChr();

    /**
     * The meta object literal for the '<em><b>String Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNSIGNED_CONSTANT__STRING_START = eINSTANCE.getunsignedConstant_StringStart();

    /**
     * The meta object literal for the '<em><b>Nil</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNSIGNED_CONSTANT__NIL = eINSTANCE.getunsignedConstant_Nil();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.functionDesignatorImpl <em>function Designator</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.functionDesignatorImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getfunctionDesignator()
     * @generated
     */
    EClass FUNCTION_DESIGNATOR = eINSTANCE.getfunctionDesignator();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DESIGNATOR__IDENTIFIER = eINSTANCE.getfunctionDesignator_Identifier();

    /**
     * The meta object literal for the '<em><b>Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_DESIGNATOR__PARAMETER_LIST = eINSTANCE.getfunctionDesignator_ParameterList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.parameterListImpl <em>parameter List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.parameterListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getparameterList()
     * @generated
     */
    EClass PARAMETER_LIST = eINSTANCE.getparameterList();

    /**
     * The meta object literal for the '<em><b>Actual Parameter1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_LIST__ACTUAL_PARAMETER1 = eINSTANCE.getparameterList_ActualParameter1();

    /**
     * The meta object literal for the '<em><b>Actual Parameter2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PARAMETER_LIST__ACTUAL_PARAMETER2 = eINSTANCE.getparameterList_ActualParameter2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.procedureStatementImpl <em>procedure Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.procedureStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getprocedureStatement()
     * @generated
     */
    EClass PROCEDURE_STATEMENT = eINSTANCE.getprocedureStatement();

    /**
     * The meta object literal for the '<em><b>Identifier</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_STATEMENT__IDENTIFIER = eINSTANCE.getprocedureStatement_Identifier();

    /**
     * The meta object literal for the '<em><b>Parameter List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference PROCEDURE_STATEMENT__PARAMETER_LIST = eINSTANCE.getprocedureStatement_ParameterList();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.actualParameterImpl <em>actual Parameter</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.actualParameterImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getactualParameter()
     * @generated
     */
    EClass ACTUAL_PARAMETER = eINSTANCE.getactualParameter();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ACTUAL_PARAMETER__EXPRESSION = eINSTANCE.getactualParameter_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.gotoStatementImpl <em>goto Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.gotoStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getgotoStatement()
     * @generated
     */
    EClass GOTO_STATEMENT = eINSTANCE.getgotoStatement();

    /**
     * The meta object literal for the '<em><b>Label Start</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference GOTO_STATEMENT__LABEL_START = eINSTANCE.getgotoStatement_LabelStart();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.structuredStatementImpl <em>structured Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.structuredStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstructuredStatement()
     * @generated
     */
    EClass STRUCTURED_STATEMENT = eINSTANCE.getstructuredStatement();

    /**
     * The meta object literal for the '<em><b>Compound Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__COMPOUND_STATEMENT = eINSTANCE.getstructuredStatement_CompoundStatement();

    /**
     * The meta object literal for the '<em><b>Repetetive Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__REPETETIVE_STATEMENT = eINSTANCE.getstructuredStatement_RepetetiveStatement();

    /**
     * The meta object literal for the '<em><b>With Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STRUCTURED_STATEMENT__WITH_STATEMENT = eINSTANCE.getstructuredStatement_WithStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.compoundStatementImpl <em>compound Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.compoundStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getcompoundStatement()
     * @generated
     */
    EClass COMPOUND_STATEMENT = eINSTANCE.getcompoundStatement();

    /**
     * The meta object literal for the '<em><b>Statements</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMPOUND_STATEMENT__STATEMENTS = eINSTANCE.getcompoundStatement_Statements();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.statementsImpl <em>statements</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.statementsImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getstatements()
     * @generated
     */
    EClass STATEMENTS = eINSTANCE.getstatements();

    /**
     * The meta object literal for the '<em><b>Statement1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENTS__STATEMENT1 = eINSTANCE.getstatements_Statement1();

    /**
     * The meta object literal for the '<em><b>Semi Terminal1</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATEMENTS__SEMI_TERMINAL1 = eINSTANCE.getstatements_SemiTerminal1();

    /**
     * The meta object literal for the '<em><b>Statement2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference STATEMENTS__STATEMENT2 = eINSTANCE.getstatements_Statement2();

    /**
     * The meta object literal for the '<em><b>Semi Terminal2</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STATEMENTS__SEMI_TERMINAL2 = eINSTANCE.getstatements_SemiTerminal2();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.repetetiveStatementImpl <em>repetetive Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.repetetiveStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrepetetiveStatement()
     * @generated
     */
    EClass REPETETIVE_STATEMENT = eINSTANCE.getrepetetiveStatement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.repeatStatementImpl <em>repeat Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.repeatStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrepeatStatement()
     * @generated
     */
    EClass REPEAT_STATEMENT = eINSTANCE.getrepeatStatement();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__STATEMENT = eINSTANCE.getrepeatStatement_Statement();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__EXPRESSION = eINSTANCE.getrepeatStatement_Expression();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.withStatementImpl <em>with Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.withStatementImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getwithStatement()
     * @generated
     */
    EClass WITH_STATEMENT = eINSTANCE.getwithStatement();

    /**
     * The meta object literal for the '<em><b>Record Variable List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH_STATEMENT__RECORD_VARIABLE_LIST = eINSTANCE.getwithStatement_RecordVariableList();

    /**
     * The meta object literal for the '<em><b>Statement</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WITH_STATEMENT__STATEMENT = eINSTANCE.getwithStatement_Statement();

    /**
     * The meta object literal for the '{@link org.xtext.example.mydsl.pascal.impl.recordVariableListImpl <em>record Variable List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.example.mydsl.pascal.impl.recordVariableListImpl
     * @see org.xtext.example.mydsl.pascal.impl.PascalPackageImpl#getrecordVariableList()
     * @generated
     */
    EClass RECORD_VARIABLE_LIST = eINSTANCE.getrecordVariableList();

    /**
     * The meta object literal for the '<em><b>Variable1</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_VARIABLE_LIST__VARIABLE1 = eINSTANCE.getrecordVariableList_Variable1();

    /**
     * The meta object literal for the '<em><b>Comma Terminal</b></em>' attribute list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RECORD_VARIABLE_LIST__COMMA_TERMINAL = eINSTANCE.getrecordVariableList_CommaTerminal();

    /**
     * The meta object literal for the '<em><b>Variable2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RECORD_VARIABLE_LIST__VARIABLE2 = eINSTANCE.getrecordVariableList_Variable2();

  }

} //PascalPackage
