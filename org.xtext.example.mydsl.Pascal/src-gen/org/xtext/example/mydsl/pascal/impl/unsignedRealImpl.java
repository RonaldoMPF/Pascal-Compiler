/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.pascal.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.unsignedReal;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unsigned Real</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.unsignedRealImpl#getUnsignedReal <em>Unsigned Real</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class unsignedRealImpl extends MinimalEObjectImpl.Container implements unsignedReal
{
  /**
   * The default value of the '{@link #getUnsignedReal() <em>Unsigned Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnsignedReal()
   * @generated
   * @ordered
   */
  protected static final String UNSIGNED_REAL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getUnsignedReal() <em>Unsigned Real</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnsignedReal()
   * @generated
   * @ordered
   */
  protected String unsignedReal = UNSIGNED_REAL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unsignedRealImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.UNSIGNED_REAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getUnsignedReal()
  {
    return unsignedReal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnsignedReal(String newUnsignedReal)
  {
    String oldUnsignedReal = unsignedReal;
    unsignedReal = newUnsignedReal;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_REAL__UNSIGNED_REAL, oldUnsignedReal, unsignedReal));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_REAL__UNSIGNED_REAL:
        return getUnsignedReal();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_REAL__UNSIGNED_REAL:
        setUnsignedReal((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_REAL__UNSIGNED_REAL:
        setUnsignedReal(UNSIGNED_REAL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_REAL__UNSIGNED_REAL:
        return UNSIGNED_REAL_EDEFAULT == null ? unsignedReal != null : !UNSIGNED_REAL_EDEFAULT.equals(unsignedReal);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (unsignedReal: ");
    result.append(unsignedReal);
    result.append(')');
    return result.toString();
  }

} //unsignedRealImpl
