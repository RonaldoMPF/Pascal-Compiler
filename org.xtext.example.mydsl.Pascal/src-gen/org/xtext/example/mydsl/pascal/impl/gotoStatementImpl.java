/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.gotoStatement;
import org.xtext.example.mydsl.pascal.labelStart;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>goto Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.gotoStatementImpl#getLabelStart <em>Label Start</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class gotoStatementImpl extends MinimalEObjectImpl.Container implements gotoStatement
{
  /**
   * The cached value of the '{@link #getLabelStart() <em>Label Start</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLabelStart()
   * @generated
   * @ordered
   */
  protected labelStart labelStart;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected gotoStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.GOTO_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public labelStart getLabelStart()
  {
    return labelStart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetLabelStart(labelStart newLabelStart, NotificationChain msgs)
  {
    labelStart oldLabelStart = labelStart;
    labelStart = newLabelStart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.GOTO_STATEMENT__LABEL_START, oldLabelStart, newLabelStart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setLabelStart(labelStart newLabelStart)
  {
    if (newLabelStart != labelStart)
    {
      NotificationChain msgs = null;
      if (labelStart != null)
        msgs = ((InternalEObject)labelStart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.GOTO_STATEMENT__LABEL_START, null, msgs);
      if (newLabelStart != null)
        msgs = ((InternalEObject)newLabelStart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.GOTO_STATEMENT__LABEL_START, null, msgs);
      msgs = basicSetLabelStart(newLabelStart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.GOTO_STATEMENT__LABEL_START, newLabelStart, newLabelStart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.GOTO_STATEMENT__LABEL_START:
        return basicSetLabelStart(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.GOTO_STATEMENT__LABEL_START:
        return getLabelStart();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.GOTO_STATEMENT__LABEL_START:
        setLabelStart((labelStart)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.GOTO_STATEMENT__LABEL_START:
        setLabelStart((labelStart)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.GOTO_STATEMENT__LABEL_START:
        return labelStart != null;
    }
    return super.eIsSet(featureID);
  }

} //gotoStatementImpl
