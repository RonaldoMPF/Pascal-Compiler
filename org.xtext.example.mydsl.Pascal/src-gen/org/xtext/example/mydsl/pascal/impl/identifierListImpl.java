/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.pascal.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EDataTypeEList;
import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.identifier;
import org.xtext.example.mydsl.pascal.identifierList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>identifier List</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.identifierListImpl#getIdentifier1 <em>Identifier1</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.identifierListImpl#getCommaTerminal <em>Comma Terminal</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.identifierListImpl#getIdentifier2 <em>Identifier2</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class identifierListImpl extends MinimalEObjectImpl.Container implements identifierList
{
  /**
   * The cached value of the '{@link #getIdentifier1() <em>Identifier1</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier1()
   * @generated
   * @ordered
   */
  protected identifier identifier1;

  /**
   * The cached value of the '{@link #getCommaTerminal() <em>Comma Terminal</em>}' attribute list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCommaTerminal()
   * @generated
   * @ordered
   */
  protected EList<String> commaTerminal;

  /**
   * The cached value of the '{@link #getIdentifier2() <em>Identifier2</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getIdentifier2()
   * @generated
   * @ordered
   */
  protected EList<identifier> identifier2;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected identifierListImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.IDENTIFIER_LIST;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public identifier getIdentifier1()
  {
    return identifier1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetIdentifier1(identifier newIdentifier1, NotificationChain msgs)
  {
    identifier oldIdentifier1 = identifier1;
    identifier1 = newIdentifier1;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.IDENTIFIER_LIST__IDENTIFIER1, oldIdentifier1, newIdentifier1);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setIdentifier1(identifier newIdentifier1)
  {
    if (newIdentifier1 != identifier1)
    {
      NotificationChain msgs = null;
      if (identifier1 != null)
        msgs = ((InternalEObject)identifier1).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.IDENTIFIER_LIST__IDENTIFIER1, null, msgs);
      if (newIdentifier1 != null)
        msgs = ((InternalEObject)newIdentifier1).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.IDENTIFIER_LIST__IDENTIFIER1, null, msgs);
      msgs = basicSetIdentifier1(newIdentifier1, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.IDENTIFIER_LIST__IDENTIFIER1, newIdentifier1, newIdentifier1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<String> getCommaTerminal()
  {
    if (commaTerminal == null)
    {
      commaTerminal = new EDataTypeEList<String>(String.class, this, PascalPackage.IDENTIFIER_LIST__COMMA_TERMINAL);
    }
    return commaTerminal;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<identifier> getIdentifier2()
  {
    if (identifier2 == null)
    {
      identifier2 = new EObjectContainmentEList<identifier>(identifier.class, this, PascalPackage.IDENTIFIER_LIST__IDENTIFIER2);
    }
    return identifier2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER1:
        return basicSetIdentifier1(null, msgs);
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER2:
        return ((InternalEList<?>)getIdentifier2()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER1:
        return getIdentifier1();
      case PascalPackage.IDENTIFIER_LIST__COMMA_TERMINAL:
        return getCommaTerminal();
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER2:
        return getIdentifier2();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER1:
        setIdentifier1((identifier)newValue);
        return;
      case PascalPackage.IDENTIFIER_LIST__COMMA_TERMINAL:
        getCommaTerminal().clear();
        getCommaTerminal().addAll((Collection<? extends String>)newValue);
        return;
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER2:
        getIdentifier2().clear();
        getIdentifier2().addAll((Collection<? extends identifier>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER1:
        setIdentifier1((identifier)null);
        return;
      case PascalPackage.IDENTIFIER_LIST__COMMA_TERMINAL:
        getCommaTerminal().clear();
        return;
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER2:
        getIdentifier2().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER1:
        return identifier1 != null;
      case PascalPackage.IDENTIFIER_LIST__COMMA_TERMINAL:
        return commaTerminal != null && !commaTerminal.isEmpty();
      case PascalPackage.IDENTIFIER_LIST__IDENTIFIER2:
        return identifier2 != null && !identifier2.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (commaTerminal: ");
    result.append(commaTerminal);
    result.append(')');
    return result.toString();
  }

} //identifierListImpl
