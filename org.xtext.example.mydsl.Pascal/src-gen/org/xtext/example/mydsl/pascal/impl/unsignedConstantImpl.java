/**
 * generated by Xtext 2.15.0
 */
package org.xtext.example.mydsl.pascal.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.mydsl.pascal.PascalPackage;
import org.xtext.example.mydsl.pascal.StringStart;
import org.xtext.example.mydsl.pascal.constantChr;
import org.xtext.example.mydsl.pascal.unsignedConstant;
import org.xtext.example.mydsl.pascal.unsignedNumber;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>unsigned Constant</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * <ul>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl#getUnsignedNumber <em>Unsigned Number</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl#getConstantChr <em>Constant Chr</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl#getStringStart <em>String Start</em>}</li>
 *   <li>{@link org.xtext.example.mydsl.pascal.impl.unsignedConstantImpl#getNil <em>Nil</em>}</li>
 * </ul>
 * </p>
 *
 * @generated
 */
public class unsignedConstantImpl extends MinimalEObjectImpl.Container implements unsignedConstant
{
  /**
   * The cached value of the '{@link #getUnsignedNumber() <em>Unsigned Number</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getUnsignedNumber()
   * @generated
   * @ordered
   */
  protected unsignedNumber unsignedNumber;

  /**
   * The cached value of the '{@link #getConstantChr() <em>Constant Chr</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConstantChr()
   * @generated
   * @ordered
   */
  protected constantChr constantChr;

  /**
   * The cached value of the '{@link #getStringStart() <em>String Start</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringStart()
   * @generated
   * @ordered
   */
  protected StringStart stringStart;

  /**
   * The default value of the '{@link #getNil() <em>Nil</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNil()
   * @generated
   * @ordered
   */
  protected static final String NIL_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getNil() <em>Nil</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNil()
   * @generated
   * @ordered
   */
  protected String nil = NIL_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected unsignedConstantImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PascalPackage.Literals.UNSIGNED_CONSTANT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public unsignedNumber getUnsignedNumber()
  {
    return unsignedNumber;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetUnsignedNumber(unsignedNumber newUnsignedNumber, NotificationChain msgs)
  {
    unsignedNumber oldUnsignedNumber = unsignedNumber;
    unsignedNumber = newUnsignedNumber;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER, oldUnsignedNumber, newUnsignedNumber);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setUnsignedNumber(unsignedNumber newUnsignedNumber)
  {
    if (newUnsignedNumber != unsignedNumber)
    {
      NotificationChain msgs = null;
      if (unsignedNumber != null)
        msgs = ((InternalEObject)unsignedNumber).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER, null, msgs);
      if (newUnsignedNumber != null)
        msgs = ((InternalEObject)newUnsignedNumber).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER, null, msgs);
      msgs = basicSetUnsignedNumber(newUnsignedNumber, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER, newUnsignedNumber, newUnsignedNumber));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public constantChr getConstantChr()
  {
    return constantChr;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConstantChr(constantChr newConstantChr, NotificationChain msgs)
  {
    constantChr oldConstantChr = constantChr;
    constantChr = newConstantChr;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR, oldConstantChr, newConstantChr);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setConstantChr(constantChr newConstantChr)
  {
    if (newConstantChr != constantChr)
    {
      NotificationChain msgs = null;
      if (constantChr != null)
        msgs = ((InternalEObject)constantChr).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR, null, msgs);
      if (newConstantChr != null)
        msgs = ((InternalEObject)newConstantChr).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR, null, msgs);
      msgs = basicSetConstantChr(newConstantChr, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR, newConstantChr, newConstantChr));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public StringStart getStringStart()
  {
    return stringStart;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStringStart(StringStart newStringStart, NotificationChain msgs)
  {
    StringStart oldStringStart = stringStart;
    stringStart = newStringStart;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__STRING_START, oldStringStart, newStringStart);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setStringStart(StringStart newStringStart)
  {
    if (newStringStart != stringStart)
    {
      NotificationChain msgs = null;
      if (stringStart != null)
        msgs = ((InternalEObject)stringStart).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__STRING_START, null, msgs);
      if (newStringStart != null)
        msgs = ((InternalEObject)newStringStart).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PascalPackage.UNSIGNED_CONSTANT__STRING_START, null, msgs);
      msgs = basicSetStringStart(newStringStart, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__STRING_START, newStringStart, newStringStart));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public String getNil()
  {
    return nil;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setNil(String newNil)
  {
    String oldNil = nil;
    nil = newNil;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PascalPackage.UNSIGNED_CONSTANT__NIL, oldNil, nil));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER:
        return basicSetUnsignedNumber(null, msgs);
      case PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR:
        return basicSetConstantChr(null, msgs);
      case PascalPackage.UNSIGNED_CONSTANT__STRING_START:
        return basicSetStringStart(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER:
        return getUnsignedNumber();
      case PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR:
        return getConstantChr();
      case PascalPackage.UNSIGNED_CONSTANT__STRING_START:
        return getStringStart();
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        return getNil();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER:
        setUnsignedNumber((unsignedNumber)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR:
        setConstantChr((constantChr)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__STRING_START:
        setStringStart((StringStart)newValue);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        setNil((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER:
        setUnsignedNumber((unsignedNumber)null);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR:
        setConstantChr((constantChr)null);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__STRING_START:
        setStringStart((StringStart)null);
        return;
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        setNil(NIL_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PascalPackage.UNSIGNED_CONSTANT__UNSIGNED_NUMBER:
        return unsignedNumber != null;
      case PascalPackage.UNSIGNED_CONSTANT__CONSTANT_CHR:
        return constantChr != null;
      case PascalPackage.UNSIGNED_CONSTANT__STRING_START:
        return stringStart != null;
      case PascalPackage.UNSIGNED_CONSTANT__NIL:
        return NIL_EDEFAULT == null ? nil != null : !NIL_EDEFAULT.equals(nil);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuffer result = new StringBuffer(super.toString());
    result.append(" (nil: ");
    result.append(nil);
    result.append(')');
    return result.toString();
  }

} //unsignedConstantImpl
